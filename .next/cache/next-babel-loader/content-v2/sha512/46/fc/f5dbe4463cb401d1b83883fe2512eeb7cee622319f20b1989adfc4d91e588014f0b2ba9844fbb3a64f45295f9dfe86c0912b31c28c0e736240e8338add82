{"ast":null,"code":"import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport usersSlice from \"./usersSlice\";\nimport { createWrapper } from \"next-redux-wrapper\";\nimport { nextReduxCookieMiddleware, wrapMakeStore } from \"next-redux-cookie-wrapper\";\nimport authSlice from \"./authSlice\";\nimport postsSlice, { setPosts } from \"./postsSlice\";\n\nvar makeStore = function makeStore() {\n  return configureStore({\n    reducer: {\n      users: usersSlice,\n      auth: authSlice,\n      posts: postsSlice\n    },\n    middleware: function middleware(getDefaultMiddleware) {\n      getDefaultMiddleware({\n        serializableCheck: {\n          ignoredActions: setPosts\n        }\n      });\n    }\n  });\n}; // const makeStore = wrapMakeStore(() =>\n//   configureStore({\n//     reducer: { users: usersSlice },\n//     middleware: (getDefaultMiddleware) =>\n//       getDefaultMiddleware().prepend(\n//         nextReduxCookieMiddleware({\n//           subtrees: [\"my.subtree\"],\n//         })\n//       ),\n//   })\n// );\n\n\nexport var wrapper = createWrapper(makeStore);","map":{"version":3,"sources":["D:/Udemy/nextjs/06-onwards-to-a-bigger-project-starting-project/store/store.js"],"names":["configureStore","getDefaultMiddleware","usersSlice","createWrapper","nextReduxCookieMiddleware","wrapMakeStore","authSlice","postsSlice","setPosts","makeStore","reducer","users","auth","posts","middleware","serializableCheck","ignoredActions","wrapper"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,oBAAzB,QAAqD,kBAArD;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SACEC,yBADF,EAEEC,aAFF,QAGO,2BAHP;AAIA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,UAAP,IAAqBC,QAArB,QAAqC,cAArC;;AACA,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,SAChBT,cAAc,CAAC;AACbU,IAAAA,OAAO,EAAE;AACPC,MAAAA,KAAK,EAAET,UADA;AAEPU,MAAAA,IAAI,EAAEN,SAFC;AAGPO,MAAAA,KAAK,EAAEN;AAHA,KADI;AAMbO,IAAAA,UAAU,EAAE,oBAACb,oBAAD,EAA0B;AACpCA,MAAAA,oBAAoB,CAAC;AACnBc,QAAAA,iBAAiB,EAAE;AACjBC,UAAAA,cAAc,EAAER;AADC;AADA,OAAD,CAApB;AAKD;AAZY,GAAD,CADE;AAAA,CAAlB,C,CAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,IAAMS,OAAO,GAAGd,aAAa,CAACM,SAAD,CAA7B","sourcesContent":["import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport usersSlice from \"./usersSlice\";\r\nimport { createWrapper } from \"next-redux-wrapper\";\r\nimport {\r\n  nextReduxCookieMiddleware,\r\n  wrapMakeStore,\r\n} from \"next-redux-cookie-wrapper\";\r\nimport authSlice from \"./authSlice\";\r\nimport postsSlice, { setPosts } from \"./postsSlice\";\r\nconst makeStore = () =>\r\n  configureStore({\r\n    reducer: {\r\n      users: usersSlice,\r\n      auth: authSlice,\r\n      posts: postsSlice,\r\n    },\r\n    middleware: (getDefaultMiddleware) => {\r\n      getDefaultMiddleware({\r\n        serializableCheck: {\r\n          ignoredActions: setPosts,\r\n        },\r\n      });\r\n    },\r\n  });\r\n// const makeStore = wrapMakeStore(() =>\r\n//   configureStore({\r\n//     reducer: { users: usersSlice },\r\n//     middleware: (getDefaultMiddleware) =>\r\n//       getDefaultMiddleware().prepend(\r\n//         nextReduxCookieMiddleware({\r\n//           subtrees: [\"my.subtree\"],\r\n//         })\r\n//       ),\r\n//   })\r\n// );\r\nexport const wrapper = createWrapper(makeStore);\r\n"]},"metadata":{},"sourceType":"module"}
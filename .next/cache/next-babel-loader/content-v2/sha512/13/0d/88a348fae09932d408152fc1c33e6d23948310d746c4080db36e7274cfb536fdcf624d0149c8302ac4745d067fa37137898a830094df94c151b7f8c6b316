{"ast":null,"code":"import { arrayUnion, collection, doc, getDoc, getDocs, query, updateDoc, where } from \"@firebase/firestore\";\nimport { db } from \"../../../firebase/firebase\";\nimport { v4 as uuid } from \"uuid\";\nexport default async function handler(req, res) {\n  const {\n    postId\n  } = req.query; //   res.status(200).json(\"hey there\");\n\n  if (req.method === \"POST\") {\n    const reply = req.body;\n    const replyData = {\n      content: reply.content,\n      user: reply.user,\n      id: uuid(),\n      postId: reply.postId\n    };\n\n    try {\n      await updateDoc(doc(db, \"posts\", postId), {\n        replies: arrayUnion(replyData)\n      });\n      res.status(200).json(\"success\");\n    } catch (err) {\n      console.log(\"err\", err);\n      res.status(400).end();\n    }\n  }\n\n  if (req.method === \"DELETE\") {\n    // const query = req.query;\n    // const replyContent = query.postId[1];\n    // const replyId = query.postId[0];\n    // const replyUser = query.postId[2];\n    // const reply = {\n    //   content:replyContent,\n    //   user:replyUser,\n    // }\n    try {//   const q = query(\n      //     collection(db, \"posts\"),\n      //     where(\"replies\", \"array-contains\", reply)\n      //   );\n      //   const x = await getDocs(q);\n      //   const data = x.docs.map((doc) => doc.data());\n      //   res.status(200).json(data);\n      //   await deleteDoc(doc(db, \"posts\", post));\n      //   res.status(200).json(\"Successfully Deleted \");\n    } catch (err) {\n      res.status(402).end();\n    }\n  } //   if (req.method === \"PUT\") {\n  //     const newPost = req.body;\n  //     try {\n  //       await updateDoc(doc(db, \"posts\", post), {\n  //         title: newPost.title,\n  //         description: newPost.description,\n  //         image: newPost.image,\n  //       });\n  //       res.status(200).json(\"successfully edited\");\n  //     } catch (err) {\n  //       res.status(404).end();\n  //     }\n  //   }\n\n}","map":{"version":3,"sources":["D:/Udemy/nextjs/06-onwards-to-a-bigger-project-starting-project/pages/api/replies/[postId].js"],"names":["arrayUnion","collection","doc","getDoc","getDocs","query","updateDoc","where","db","v4","uuid","handler","req","res","postId","method","reply","body","replyData","content","user","id","replies","status","json","err","console","log","end"],"mappings":"AAAA,SACEA,UADF,EAEEC,UAFF,EAGEC,GAHF,EAIEC,MAJF,EAKEC,OALF,EAMEC,KANF,EAOEC,SAPF,EAQEC,KARF,QASO,qBATP;AAUA,SAASC,EAAT,QAAmB,4BAAnB;AACA,SAASC,EAAE,IAAIC,IAAf,QAA2B,MAA3B;AACA,eAAe,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAC9C,QAAM;AAAEC,IAAAA;AAAF,MAAaF,GAAG,CAACP,KAAvB,CAD8C,CAG9C;;AACA,MAAIO,GAAG,CAACG,MAAJ,KAAe,MAAnB,EAA2B;AACzB,UAAMC,KAAK,GAAGJ,GAAG,CAACK,IAAlB;AAEA,UAAMC,SAAS,GAAG;AAChBC,MAAAA,OAAO,EAAEH,KAAK,CAACG,OADC;AAEhBC,MAAAA,IAAI,EAAEJ,KAAK,CAACI,IAFI;AAGhBC,MAAAA,EAAE,EAAEX,IAAI,EAHQ;AAIhBI,MAAAA,MAAM,EAAEE,KAAK,CAACF;AAJE,KAAlB;;AAMA,QAAI;AACF,YAAMR,SAAS,CAACJ,GAAG,CAACM,EAAD,EAAK,OAAL,EAAcM,MAAd,CAAJ,EAA2B;AACxCQ,QAAAA,OAAO,EAAEtB,UAAU,CAACkB,SAAD;AADqB,OAA3B,CAAf;AAGAL,MAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,SAArB;AACD,KALD,CAKE,OAAOC,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBF,GAAnB;AACAZ,MAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBK,GAAhB;AACD;AACF;;AACD,MAAIhB,GAAG,CAACG,MAAJ,KAAe,QAAnB,EAA6B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,QAAI,CACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,KAVD,CAUE,OAAOU,GAAP,EAAY;AACZZ,MAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBK,GAAhB;AACD;AACF,GA/C6C,CAgD9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD","sourcesContent":["import {\r\n  arrayUnion,\r\n  collection,\r\n  doc,\r\n  getDoc,\r\n  getDocs,\r\n  query,\r\n  updateDoc,\r\n  where,\r\n} from \"@firebase/firestore\";\r\nimport { db } from \"../../../firebase/firebase\";\r\nimport { v4 as uuid } from \"uuid\";\r\nexport default async function handler(req, res) {\r\n  const { postId } = req.query;\r\n\r\n  //   res.status(200).json(\"hey there\");\r\n  if (req.method === \"POST\") {\r\n    const reply = req.body;\r\n\r\n    const replyData = {\r\n      content: reply.content,\r\n      user: reply.user,\r\n      id: uuid(),\r\n      postId: reply.postId,\r\n    };\r\n    try {\r\n      await updateDoc(doc(db, \"posts\", postId), {\r\n        replies: arrayUnion(replyData),\r\n      });\r\n      res.status(200).json(\"success\");\r\n    } catch (err) {\r\n      console.log(\"err\", err);\r\n      res.status(400).end();\r\n    }\r\n  }\r\n  if (req.method === \"DELETE\") {\r\n    // const query = req.query;\r\n    // const replyContent = query.postId[1];\r\n    // const replyId = query.postId[0];\r\n    // const replyUser = query.postId[2];\r\n    // const reply = {\r\n    //   content:replyContent,\r\n    //   user:replyUser,\r\n\r\n    // }\r\n\r\n    try {\r\n      //   const q = query(\r\n      //     collection(db, \"posts\"),\r\n      //     where(\"replies\", \"array-contains\", reply)\r\n      //   );\r\n      //   const x = await getDocs(q);\r\n      //   const data = x.docs.map((doc) => doc.data());\r\n      //   res.status(200).json(data);\r\n      //   await deleteDoc(doc(db, \"posts\", post));\r\n      //   res.status(200).json(\"Successfully Deleted \");\r\n    } catch (err) {\r\n      res.status(402).end();\r\n    }\r\n  }\r\n  //   if (req.method === \"PUT\") {\r\n  //     const newPost = req.body;\r\n  //     try {\r\n  //       await updateDoc(doc(db, \"posts\", post), {\r\n  //         title: newPost.title,\r\n  //         description: newPost.description,\r\n  //         image: newPost.image,\r\n  //       });\r\n  //       res.status(200).json(\"successfully edited\");\r\n  //     } catch (err) {\r\n  //       res.status(404).end();\r\n  //     }\r\n  //   }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
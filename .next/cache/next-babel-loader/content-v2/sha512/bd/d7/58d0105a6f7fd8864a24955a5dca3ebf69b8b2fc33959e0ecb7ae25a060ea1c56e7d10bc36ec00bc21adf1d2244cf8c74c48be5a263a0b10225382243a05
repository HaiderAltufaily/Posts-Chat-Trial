{"ast":null,"code":"import _regeneratorRuntime from \"D:/Udemy/nextjs/06-onwards-to-a-bigger-project-starting-project/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/Udemy/nextjs/06-onwards-to-a-bigger-project-starting-project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { setDoc } from \"@firebase/firestore\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\n\nfunction useFetch(_x) {\n  return _useFetch.apply(this, arguments);\n}\n\nfunction _useFetch() {\n  var _s = $RefreshSig$();\n\n  _useFetch = _asyncToGenerator(_s( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var method, url, body, _useState, isLoading, setIsLoading, _useState2, error, setError, _useState3, data, setData;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _s();\n\n            method = _ref.method, url = _ref.url, body = _ref.body;\n            _useState = useState(true), isLoading = _useState[0], setIsLoading = _useState[1];\n            _useState2 = useState(null), error = _useState2[0], setError = _useState2[1];\n            _useState3 = useState([]), data = _useState3[0], setData = _useState3[1];\n            console.log(method, url, body); //   await axios[method](url, body)\n            //     .then((d) => {\n            //       setData(d.data), setIsLoading(false);\n            //     })\n            //     .catch((err) => {\n            //       setIsLoading(false);\n            //       setError(err.message);\n            //     });\n\n            return _context.abrupt(\"return\", {\n              isLoading: isLoading,\n              error: error,\n              data: data\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }), \"+VOwUbZsfVhTCQ46JcGStkbLTHY=\"));\n  return _useFetch.apply(this, arguments);\n}\n\nexport default useFetch;","map":{"version":3,"sources":["D:/Udemy/nextjs/06-onwards-to-a-bigger-project-starting-project/hooks/useFetch.js"],"names":["setDoc","axios","useState","useFetch","method","url","body","isLoading","setIsLoading","error","setError","data","setData","console","log"],"mappings":";;AAAA,SAASA,MAAT,QAAuB,qBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;SAEeC,Q;;;;;;;0EAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAA0BC,YAAAA,MAA1B,QAA0BA,MAA1B,EAAkCC,GAAlC,QAAkCA,GAAlC,EAAuCC,IAAvC,QAAuCA,IAAvC;AAAA,wBACoCJ,QAAQ,CAAC,IAAD,CAD5C,EACSK,SADT,iBACoBC,YADpB;AAAA,yBAE4BN,QAAQ,CAAC,IAAD,CAFpC,EAESO,KAFT,kBAEgBC,QAFhB;AAAA,yBAG0BR,QAAQ,CAAC,EAAD,CAHlC,EAGSS,IAHT,kBAGeC,OAHf;AAIEC,YAAAA,OAAO,CAACC,GAAR,CAAYV,MAAZ,EAAoBC,GAApB,EAAyBC,IAAzB,EAJF,CAKE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAZF,6CAaS;AACLC,cAAAA,SAAS,EAATA,SADK;AAELE,cAAAA,KAAK,EAALA,KAFK;AAGLE,cAAAA,IAAI,EAAJA;AAHK,aAbT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAmBA,eAAeR,QAAf","sourcesContent":["import { setDoc } from \"@firebase/firestore\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\n\r\nasync function useFetch({ method, url, body }) {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [data, setData] = useState([]);\r\n  console.log(method, url, body);\r\n  //   await axios[method](url, body)\r\n  //     .then((d) => {\r\n  //       setData(d.data), setIsLoading(false);\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       setIsLoading(false);\r\n  //       setError(err.message);\r\n  //     });\r\n  return {\r\n    isLoading,\r\n    error,\r\n    data,\r\n  };\r\n}\r\nexport default useFetch;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Udemy\\\\nextjs\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[postId]\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { collection, doc, getDocs, getDoc } from \"@firebase/firestore\";\nimport moment from \"moment\";\nimport React, { Fragment } from \"react\";\nimport MeetUpDetails from \"../../components/meetups/MeetUpDetails\";\nimport ReplyList from \"../../components/meetups/ReplyList\";\nimport db from \"../../firebase/firebase\";\nimport { wrapper } from \"../../store/store\";\nimport { getSingleUser } from \"../../store/usersSlice\";\n\nfunction MeetUpDetailsPage({\n  posts\n}) {\n  console.log(posts);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MeetUpDetails, {\n      title: posts.title,\n      time: posts.time,\n      description: posts.description,\n      image: posts.image,\n      user: posts.user,\n      id: posts.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReplyList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n} // export async function getStaticPaths() {\n//   const docc = await getDocs(collection(db, \"meetups\"));\n//   const docs = docc.docs.map((doc) => {\n//     return {\n//       ...doc.data(),\n//       id: doc.id,\n//     };\n//   });\n//   return {\n//     fallback: true,\n//     paths: docs.map((doc) => {\n//       return { params: { meetupId: doc.id } };\n//     }),\n//   };\n// }\n\n\nexport async function getStaticPaths() {\n  const docs = await getDocs(collection(db, \"posts\"));\n  const posts = docs.docs.map(doc => {\n    return _objectSpread(_objectSpread({}, doc.data()), {}, {\n      id: doc.id\n    });\n  });\n  return {\n    fallback: true,\n    paths: posts.map(post => {\n      return {\n        params: {\n          postId: post.id\n        }\n      };\n    })\n  };\n}\nexport const getStaticProps = wrapper.getStaticProps(store => async context => {\n  const postId = context.params.postId;\n  const docc = await getDoc(doc(db, \"posts\", postId)).then(data => {\n    return _objectSpread(_objectSpread({}, data.data()), {}, {\n      id: data.id\n    });\n  });\n\n  const newDoc = _objectSpread(_objectSpread({}, docc), {}, {\n    time: moment(docc.time.toDate()).calendar()\n  });\n\n  return {\n    props: {\n      posts: newDoc\n    }\n  };\n});\nexport default MeetUpDetailsPage;","map":{"version":3,"sources":["D:/Udemy/nextjs/06-onwards-to-a-bigger-project-starting-project/pages/[postId]/index.js"],"names":["collection","doc","getDocs","getDoc","moment","React","Fragment","MeetUpDetails","ReplyList","db","wrapper","getSingleUser","MeetUpDetailsPage","posts","console","log","title","time","description","image","user","id","getStaticPaths","docs","map","data","fallback","paths","post","params","postId","getStaticProps","store","context","docc","then","newDoc","toDate","calendar","props"],"mappings":";;;;;;;;;AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,OAA1B,EAAmCC,MAAnC,QAAiD,qBAAjD;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,aAAP,MAA0B,wCAA1B;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,EAAP,MAAe,yBAAf;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,aAAT,QAA8B,wBAA9B;;AACA,SAASC,iBAAT,CAA2B;AAAEC,EAAAA;AAAF,CAA3B,EAAsC;AACpCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,sBACE;AAAA,4BACE,QAAC,aAAD;AACE,MAAA,KAAK,EAAEA,KAAK,CAACG,KADf;AAEE,MAAA,IAAI,EAAEH,KAAK,CAACI,IAFd;AAGE,MAAA,WAAW,EAAEJ,KAAK,CAACK,WAHrB;AAIE,MAAA,KAAK,EAAEL,KAAK,CAACM,KAJf;AAKE,MAAA,IAAI,EAAEN,KAAK,CAACO,IALd;AAME,MAAA,EAAE,EAAEP,KAAK,CAACQ;AANZ;AAAA;AAAA;AAAA;AAAA,YADF,eASE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,C,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,IAAI,GAAG,MAAMrB,OAAO,CAACF,UAAU,CAACS,EAAD,EAAK,OAAL,CAAX,CAA1B;AACA,QAAMI,KAAK,GAAGU,IAAI,CAACA,IAAL,CAAUC,GAAV,CAAevB,GAAD,IAAS;AACnC,2CAAYA,GAAG,CAACwB,IAAJ,EAAZ;AAAwBJ,MAAAA,EAAE,EAAEpB,GAAG,CAACoB;AAAhC;AACD,GAFa,CAAd;AAIA,SAAO;AACLK,IAAAA,QAAQ,EAAE,IADL;AAELC,IAAAA,KAAK,EAAEd,KAAK,CAACW,GAAN,CAAWI,IAAD,IAAU;AACzB,aAAO;AAAEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,MAAM,EAAEF,IAAI,CAACP;AAAf;AAAV,OAAP;AACD,KAFM;AAFF,GAAP;AAMD;AACD,OAAO,MAAMU,cAAc,GAAGrB,OAAO,CAACqB,cAAR,CAC3BC,KAAD,IAAW,MAAOC,OAAP,IAAmB;AAC5B,QAAMH,MAAM,GAAGG,OAAO,CAACJ,MAAR,CAAeC,MAA9B;AACA,QAAMI,IAAI,GAAG,MAAM/B,MAAM,CAACF,GAAG,CAACQ,EAAD,EAAK,OAAL,EAAcqB,MAAd,CAAJ,CAAN,CAAiCK,IAAjC,CAAuCV,IAAD,IAAU;AACjE,2CAAYA,IAAI,CAACA,IAAL,EAAZ;AAAyBJ,MAAAA,EAAE,EAAEI,IAAI,CAACJ;AAAlC;AACD,GAFkB,CAAnB;;AAIA,QAAMe,MAAM,mCAAQF,IAAR;AAAcjB,IAAAA,IAAI,EAAEb,MAAM,CAAC8B,IAAI,CAACjB,IAAL,CAAUoB,MAAV,EAAD,CAAN,CAA2BC,QAA3B;AAApB,IAAZ;;AAEA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACL1B,MAAAA,KAAK,EAAEuB;AADF;AADF,GAAP;AAKD,CAd2B,CAAvB;AAiBP,eAAexB,iBAAf","sourcesContent":["import { collection, doc, getDocs, getDoc } from \"@firebase/firestore\";\r\nimport moment from \"moment\";\r\nimport React, { Fragment } from \"react\";\r\nimport MeetUpDetails from \"../../components/meetups/MeetUpDetails\";\r\nimport ReplyList from \"../../components/meetups/ReplyList\";\r\nimport db from \"../../firebase/firebase\";\r\nimport { wrapper } from \"../../store/store\";\r\nimport { getSingleUser } from \"../../store/usersSlice\";\r\nfunction MeetUpDetailsPage({ posts }) {\r\n  console.log(posts);\r\n  return (\r\n    <div>\r\n      <MeetUpDetails\r\n        title={posts.title}\r\n        time={posts.time}\r\n        description={posts.description}\r\n        image={posts.image}\r\n        user={posts.user}\r\n        id={posts.id}\r\n      />\r\n      <ReplyList />\r\n    </div>\r\n  );\r\n}\r\n// export async function getStaticPaths() {\r\n//   const docc = await getDocs(collection(db, \"meetups\"));\r\n//   const docs = docc.docs.map((doc) => {\r\n//     return {\r\n//       ...doc.data(),\r\n//       id: doc.id,\r\n//     };\r\n//   });\r\n//   return {\r\n//     fallback: true,\r\n//     paths: docs.map((doc) => {\r\n//       return { params: { meetupId: doc.id } };\r\n//     }),\r\n//   };\r\n// }\r\nexport async function getStaticPaths() {\r\n  const docs = await getDocs(collection(db, \"posts\"));\r\n  const posts = docs.docs.map((doc) => {\r\n    return { ...doc.data(), id: doc.id };\r\n  });\r\n\r\n  return {\r\n    fallback: true,\r\n    paths: posts.map((post) => {\r\n      return { params: { postId: post.id } };\r\n    }),\r\n  };\r\n}\r\nexport const getStaticProps = wrapper.getStaticProps(\r\n  (store) => async (context) => {\r\n    const postId = context.params.postId;\r\n    const docc = await getDoc(doc(db, \"posts\", postId)).then((data) => {\r\n      return { ...data.data(), id: data.id };\r\n    });\r\n\r\n    const newDoc = { ...docc, time: moment(docc.time.toDate()).calendar() };\r\n\r\n    return {\r\n      props: {\r\n        posts: newDoc,\r\n      },\r\n    };\r\n  }\r\n);\r\n\r\nexport default MeetUpDetailsPage;\r\n"]},"metadata":{},"sourceType":"module"}
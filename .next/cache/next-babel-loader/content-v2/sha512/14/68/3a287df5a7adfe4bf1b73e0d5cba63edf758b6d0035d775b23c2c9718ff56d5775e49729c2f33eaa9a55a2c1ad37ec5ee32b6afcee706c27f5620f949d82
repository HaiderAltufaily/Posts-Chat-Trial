{"ast":null,"code":"import { setDoc } from \"@firebase/firestore\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\n\nconst useFetch = url => {\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(true);\n  const {\n    0: error,\n    1: setError\n  } = useState(null);\n  const {\n    0: data,\n    1: setData\n  } = useState([]); //   console.log(method, url, body);\n\n  async function getData() {\n    await axios.get(url).then(data => {\n      setData(data.data);\n      setIsLoading(false);\n    }).catch(err => {\n      setError(err.message);\n      setIsLoading(false);\n    });\n  }\n\n  useEffect(() => {\n    getData();\n  }, []);\n  return {\n    isLoading,\n    error,\n    data\n  };\n};\n\nexport default useFetch;","map":{"version":3,"sources":["D:/Udemy/nextjs/06-onwards-to-a-bigger-project-starting-project/hooks/useFetch.js"],"names":["setDoc","axios","useEffect","useState","useFetch","url","isLoading","setIsLoading","error","setError","data","setData","getData","get","then","catch","err","message"],"mappings":"AAAA,SAASA,MAAT,QAAuB,qBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AACxB,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BJ,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM;AAAA,OAACK,KAAD;AAAA,OAAQC;AAAR,MAAoBN,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM;AAAA,OAACO,IAAD;AAAA,OAAOC;AAAP,MAAkBR,QAAQ,CAAC,EAAD,CAAhC,CAHwB,CAIxB;;AACA,iBAAeS,OAAf,GAAyB;AACvB,UAAMX,KAAK,CACRY,GADG,CACCR,GADD,EAEHS,IAFG,CAEGJ,IAAD,IAAU;AACdC,MAAAA,OAAO,CAACD,IAAI,CAACA,IAAN,CAAP;AACAH,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KALG,EAMHQ,KANG,CAMIC,GAAD,IAAS;AACdP,MAAAA,QAAQ,CAACO,GAAG,CAACC,OAAL,CAAR;AACAV,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KATG,CAAN;AAUD;;AACDL,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT;AAGA,SAAO;AACLN,IAAAA,SADK;AAELE,IAAAA,KAFK;AAGLE,IAAAA;AAHK,GAAP;AAKD,CAzBD;;AA0BA,eAAeN,QAAf","sourcesContent":["import { setDoc } from \"@firebase/firestore\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst useFetch = (url) => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [data, setData] = useState([]);\r\n  //   console.log(method, url, body);\r\n  async function getData() {\r\n    await axios\r\n      .get(url)\r\n      .then((data) => {\r\n        setData(data.data);\r\n        setIsLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        setError(err.message);\r\n        setIsLoading(false);\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n  return {\r\n    isLoading,\r\n    error,\r\n    data,\r\n  };\r\n};\r\nexport default useFetch;\r\n"]},"metadata":{},"sourceType":"module"}
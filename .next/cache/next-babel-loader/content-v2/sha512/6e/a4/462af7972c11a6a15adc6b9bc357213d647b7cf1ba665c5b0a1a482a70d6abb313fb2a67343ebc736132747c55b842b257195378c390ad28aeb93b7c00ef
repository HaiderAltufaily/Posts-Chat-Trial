{"ast":null,"code":"import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport usersSlice from \"./usersSlice\";\nimport { createWrapper } from \"next-redux-wrapper\";\nimport { nextReduxCookieMiddleware, wrapMakeStore } from \"next-redux-cookie-wrapper\";\nimport authSlice from \"./authSlice\";\nimport postsSlice from \"./postsSlice\"; // const makeStore = () =>\n//   configureStore({\n//     reducer: {\n//       users: usersSlice,\n//       auth: authSlice,\n//       posts: postsSlice,\n//     },\n//     middleware: (getDefaultMiddleware) => {\n//       return getDefaultMiddleware({\n//         serializableCheck: false,\n//         // ignoredActions: [\n//         //   \"submitPost/posts/fulfilled\",\n//         //   \"getCurrent/auth/fulfilled\",\n//         //   \"posts/setPosts\",\n//         //   \"getAllPosts/posts/fulfilled\",\n//         // ],\n//       });\n//     },\n//   });\n\nvar makeStore = wrapMakeStore(function () {\n  return configureStore({\n    reducer: {\n      users: usersSlice,\n      auth: authSlice,\n      posts: postsSlice\n    },\n    middleware: function middleware(getDefaultMiddleware) {\n      return getDefaultMiddleware().prepend(nextReduxCookieMiddleware({\n        subtrees: [\"my.subtree\"]\n      }));\n    }\n  });\n});\nexport var wrapper = createWrapper(makeStore);","map":{"version":3,"sources":["D:/Udemy/nextjs/06-onwards-to-a-bigger-project-starting-project/store/store.js"],"names":["configureStore","getDefaultMiddleware","usersSlice","createWrapper","nextReduxCookieMiddleware","wrapMakeStore","authSlice","postsSlice","makeStore","reducer","users","auth","posts","middleware","prepend","subtrees","wrapper"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,oBAAzB,QAAqD,kBAArD;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SACEC,yBADF,EAEEC,aAFF,QAGO,2BAHP;AAIA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAMC,SAAS,GAAGH,aAAa,CAAC;AAAA,SAC9BL,cAAc,CAAC;AACbS,IAAAA,OAAO,EAAE;AAAEC,MAAAA,KAAK,EAAER,UAAT;AAAqBS,MAAAA,IAAI,EAAEL,SAA3B;AAAsCM,MAAAA,KAAK,EAAEL;AAA7C,KADI;AAEbM,IAAAA,UAAU,EAAE,oBAACZ,oBAAD;AAAA,aACVA,oBAAoB,GAAGa,OAAvB,CACEV,yBAAyB,CAAC;AACxBW,QAAAA,QAAQ,EAAE,CAAC,YAAD;AADc,OAAD,CAD3B,CADU;AAAA;AAFC,GAAD,CADgB;AAAA,CAAD,CAA/B;AAWA,OAAO,IAAMC,OAAO,GAAGb,aAAa,CAACK,SAAD,CAA7B","sourcesContent":["import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport usersSlice from \"./usersSlice\";\r\nimport { createWrapper } from \"next-redux-wrapper\";\r\nimport {\r\n  nextReduxCookieMiddleware,\r\n  wrapMakeStore,\r\n} from \"next-redux-cookie-wrapper\";\r\nimport authSlice from \"./authSlice\";\r\nimport postsSlice from \"./postsSlice\";\r\n// const makeStore = () =>\r\n//   configureStore({\r\n//     reducer: {\r\n//       users: usersSlice,\r\n//       auth: authSlice,\r\n//       posts: postsSlice,\r\n//     },\r\n//     middleware: (getDefaultMiddleware) => {\r\n//       return getDefaultMiddleware({\r\n//         serializableCheck: false,\r\n//         // ignoredActions: [\r\n//         //   \"submitPost/posts/fulfilled\",\r\n//         //   \"getCurrent/auth/fulfilled\",\r\n//         //   \"posts/setPosts\",\r\n//         //   \"getAllPosts/posts/fulfilled\",\r\n//         // ],\r\n//       });\r\n//     },\r\n//   });\r\nconst makeStore = wrapMakeStore(() =>\r\n  configureStore({\r\n    reducer: { users: usersSlice, auth: authSlice, posts: postsSlice },\r\n    middleware: (getDefaultMiddleware) =>\r\n      getDefaultMiddleware().prepend(\r\n        nextReduxCookieMiddleware({\r\n          subtrees: [\"my.subtree\"],\r\n        })\r\n      ),\r\n  })\r\n);\r\nexport const wrapper = createWrapper(makeStore);\r\n"]},"metadata":{},"sourceType":"module"}
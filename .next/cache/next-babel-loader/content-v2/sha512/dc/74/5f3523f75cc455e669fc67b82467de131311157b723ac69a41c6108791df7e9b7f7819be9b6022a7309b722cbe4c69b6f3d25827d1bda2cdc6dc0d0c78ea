{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { HYDRATE } from \"next-redux-wrapper\";\nexport const getUser = createAsyncThunk(\"getUser/posts\", async user => {\n  console.log(user);\n  const response = await axios.get(`/api/${user}`);\n  const data = await response.data;\n  return data;\n});\nexport const getSingleUser = createAsyncThunk(\"getSingleUser/users\", async id => {\n  axios.get(`/api/${user}`).then(data => data.data);\n});\nconst usersSlice = createSlice({\n  name: \"users\",\n  initialState: {\n    getUserStatus: \"\",\n    user: \"\"\n  },\n  extraReducers: {\n    [HYDRATE]: (state, action) => {\n      return _objectSpread(_objectSpread({}, state), action.payload.users);\n    },\n    [getSingleUser.pending]: (state, action) => {\n      state.getUserStatus = \"loading\";\n    },\n    [getSingleUser.fulfilled]: (state, action) => {\n      state.getUserStatus = \"success\";\n      state.user = action.payload;\n    },\n    [getSingleUser.rejected]: (state, action) => {\n      state.getUserStatus = action.error.message;\n    }\n  }\n});\nexport default usersSlice.reducer;","map":{"version":3,"sources":["D:/Udemy/nextjs/06-onwards-to-a-bigger-project-starting-project/store/usersSlice.js"],"names":["createAsyncThunk","createSlice","axios","HYDRATE","getUser","user","console","log","response","get","data","getSingleUser","id","then","usersSlice","name","initialState","getUserStatus","extraReducers","state","action","payload","users","pending","fulfilled","rejected","error","message","reducer"],"mappings":";;;;;;AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,oBAAxB;AAEA,OAAO,MAAMC,OAAO,GAAGJ,gBAAgB,CAAC,eAAD,EAAkB,MAAOK,IAAP,IAAgB;AACvEC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,QAAMG,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAW,QAAOJ,IAAK,EAAvB,CAAvB;AAEA,QAAMK,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAA5B;AACA,SAAOA,IAAP;AACD,CANsC,CAAhC;AAOP,OAAO,MAAMC,aAAa,GAAGX,gBAAgB,CAC3C,qBAD2C,EAE3C,MAAOY,EAAP,IAAc;AACZV,EAAAA,KAAK,CAACO,GAAN,CAAW,QAAOJ,IAAK,EAAvB,EAA0BQ,IAA1B,CAAgCH,IAAD,IAAUA,IAAI,CAACA,IAA9C;AACD,CAJ0C,CAAtC;AAOP,MAAMI,UAAU,GAAGb,WAAW,CAAC;AAC7Bc,EAAAA,IAAI,EAAE,OADuB;AAE7BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,aAAa,EAAE,EADH;AAEZZ,IAAAA,IAAI,EAAE;AAFM,GAFe;AAM7Ba,EAAAA,aAAa,EAAE;AACb,KAACf,OAAD,GAAW,CAACgB,KAAD,EAAQC,MAAR,KAAmB;AAC5B,6CACKD,KADL,GAEKC,MAAM,CAACC,OAAP,CAAeC,KAFpB;AAID,KANY;AAOb,KAACX,aAAa,CAACY,OAAf,GAAyB,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AAC1CD,MAAAA,KAAK,CAACF,aAAN,GAAsB,SAAtB;AACD,KATY;AAUb,KAACN,aAAa,CAACa,SAAf,GAA2B,CAACL,KAAD,EAAQC,MAAR,KAAmB;AAC5CD,MAAAA,KAAK,CAACF,aAAN,GAAsB,SAAtB;AACAE,MAAAA,KAAK,CAACd,IAAN,GAAae,MAAM,CAACC,OAApB;AACD,KAbY;AAeb,KAACV,aAAa,CAACc,QAAf,GAA0B,CAACN,KAAD,EAAQC,MAAR,KAAmB;AAC3CD,MAAAA,KAAK,CAACF,aAAN,GAAsBG,MAAM,CAACM,KAAP,CAAaC,OAAnC;AACD;AAjBY;AANc,CAAD,CAA9B;AA0BA,eAAeb,UAAU,CAACc,OAA1B","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport { HYDRATE } from \"next-redux-wrapper\";\r\n\r\nexport const getUser = createAsyncThunk(\"getUser/posts\", async (user) => {\r\n  console.log(user);\r\n  const response = await axios.get(`/api/${user}`);\r\n\r\n  const data = await response.data;\r\n  return data;\r\n});\r\nexport const getSingleUser = createAsyncThunk(\r\n  \"getSingleUser/users\",\r\n  async (id) => {\r\n    axios.get(`/api/${user}`).then((data) => data.data);\r\n  }\r\n);\r\n\r\nconst usersSlice = createSlice({\r\n  name: \"users\",\r\n  initialState: {\r\n    getUserStatus: \"\",\r\n    user: \"\",\r\n  },\r\n  extraReducers: {\r\n    [HYDRATE]: (state, action) => {\r\n      return {\r\n        ...state,\r\n        ...action.payload.users,\r\n      };\r\n    },\r\n    [getSingleUser.pending]: (state, action) => {\r\n      state.getUserStatus = \"loading\";\r\n    },\r\n    [getSingleUser.fulfilled]: (state, action) => {\r\n      state.getUserStatus = \"success\";\r\n      state.user = action.payload;\r\n    },\r\n\r\n    [getSingleUser.rejected]: (state, action) => {\r\n      state.getUserStatus = action.error.message;\r\n    },\r\n  },\r\n});\r\nexport default usersSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}
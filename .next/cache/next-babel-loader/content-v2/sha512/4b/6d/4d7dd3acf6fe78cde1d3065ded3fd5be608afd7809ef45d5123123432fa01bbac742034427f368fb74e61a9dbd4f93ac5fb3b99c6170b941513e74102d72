{"ast":null,"code":"import { createUserWithEmailAndPassword } from \"@firebase/auth\";\nimport { doc, setDoc } from \"@firebase/firestore\";\nimport { auth, db } from \"../../../firebase/firebase\";\n\nasync function handler(req, res) {\n  if (req.method === \"POST\") {\n    const {\n      email,\n      password\n    } = req.body;\n\n    if (email && password) {\n      try {\n        const response = await createUserWithEmailAndPassword(auth, email, password);\n        const newDoc = await setDoc(doc(db, \"users\", response.user.uid));\n        res.status(200).json(newDoc);\n      } catch (err) {\n        res.status(404).json(err.message);\n      }\n    }\n  }\n}\n\nexport default handler;","map":{"version":3,"sources":["D:/Udemy/nextjs/06-onwards-to-a-bigger-project-starting-project/pages/api/auth/signup.js"],"names":["createUserWithEmailAndPassword","doc","setDoc","auth","db","handler","req","res","method","email","password","body","response","newDoc","user","uid","status","json","err","message"],"mappings":"AAAA,SAASA,8BAAT,QAA+C,gBAA/C;AACA,SAASC,GAAT,EAAcC,MAAd,QAA4B,qBAA5B;AACA,SAASC,IAAT,EAAeC,EAAf,QAAyB,4BAAzB;;AAEA,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAC/B,MAAID,GAAG,CAACE,MAAJ,KAAe,MAAnB,EAA2B;AACzB,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAsBJ,GAAG,CAACK,IAAhC;;AACA,QAAIF,KAAK,IAAIC,QAAb,EAAuB;AACrB,UAAI;AACF,cAAME,QAAQ,GAAG,MAAMZ,8BAA8B,CACnDG,IADmD,EAEnDM,KAFmD,EAGnDC,QAHmD,CAArD;AAMA,cAAMG,MAAM,GAAG,MAAMX,MAAM,CAACD,GAAG,CAACG,EAAD,EAAK,OAAL,EAAcQ,QAAQ,CAACE,IAAT,CAAcC,GAA5B,CAAJ,CAA3B;AACAR,QAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBJ,MAArB;AACD,OATD,CASE,OAAOK,GAAP,EAAY;AACZX,QAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,GAAG,CAACC,OAAzB;AACD;AACF;AACF;AACF;;AACD,eAAed,OAAf","sourcesContent":["import { createUserWithEmailAndPassword } from \"@firebase/auth\";\r\nimport { doc, setDoc } from \"@firebase/firestore\";\r\nimport { auth, db } from \"../../../firebase/firebase\";\r\n\r\nasync function handler(req, res) {\r\n  if (req.method === \"POST\") {\r\n    const { email, password } = req.body;\r\n    if (email && password) {\r\n      try {\r\n        const response = await createUserWithEmailAndPassword(\r\n          auth,\r\n          email,\r\n          password\r\n        );\r\n\r\n        const newDoc = await setDoc(doc(db, \"users\", response.user.uid));\r\n        res.status(200).json(newDoc);\r\n      } catch (err) {\r\n        res.status(404).json(err.message);\r\n      }\r\n    }\r\n  }\r\n}\r\nexport default handler;\r\n"]},"metadata":{},"sourceType":"module"}
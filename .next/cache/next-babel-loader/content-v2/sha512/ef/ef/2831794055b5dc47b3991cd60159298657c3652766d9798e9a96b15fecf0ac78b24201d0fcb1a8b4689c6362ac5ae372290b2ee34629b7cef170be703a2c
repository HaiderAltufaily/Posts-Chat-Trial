{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { HYDRATE } from \"next-redux-wrapper\";\nexport const getUser = createAsyncThunk(\"getUser/posts\", async user => {\n  axios.get(`/api/${user}`);\n});\nconst usersSlice = createSlice({\n  name: \"users\",\n  initialState: {\n    getUserStatus: \"\"\n  },\n  extraReducers: {\n    [HYDRATE]: (state, action) => {\n      return _objectSpread(_objectSpread({}, state), action.payload.some);\n    },\n    [getUser.pending]: (state, action) => {\n      state.getUserStatus = \"loading\";\n    },\n    [getUser.fulfilled]: (state, action) => {\n      state.getUserStatus = \"success\";\n    },\n    [getUser.rejected]: (state, action) => {\n      state.getUserStatus = action.error.message;\n    }\n  }\n});\nexport default usersSlice.reducer;","map":{"version":3,"sources":["D:/Udemy/nextjs/06-onwards-to-a-bigger-project-starting-project/store/usersSlice.js"],"names":["createAsyncThunk","createSlice","axios","HYDRATE","getUser","user","get","usersSlice","name","initialState","getUserStatus","extraReducers","state","action","payload","some","pending","fulfilled","rejected","error","message","reducer"],"mappings":";;;;;;AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,oBAAxB;AAEA,OAAO,MAAMC,OAAO,GAAGJ,gBAAgB,CAAC,eAAD,EAAkB,MAAOK,IAAP,IAAgB;AACvEH,EAAAA,KAAK,CAACI,GAAN,CAAW,QAAOD,IAAK,EAAvB;AACD,CAFsC,CAAhC;AAIP,MAAME,UAAU,GAAGN,WAAW,CAAC;AAC7BO,EAAAA,IAAI,EAAE,OADuB;AAE7BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,aAAa,EAAE;AADH,GAFe;AAK7BC,EAAAA,aAAa,EAAE;AACb,KAACR,OAAD,GAAW,CAACS,KAAD,EAAQC,MAAR,KAAmB;AAC5B,6CACKD,KADL,GAEKC,MAAM,CAACC,OAAP,CAAeC,IAFpB;AAID,KANY;AAOb,KAACX,OAAO,CAACY,OAAT,GAAmB,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AACpCD,MAAAA,KAAK,CAACF,aAAN,GAAsB,SAAtB;AACD,KATY;AAUb,KAACN,OAAO,CAACa,SAAT,GAAqB,CAACL,KAAD,EAAQC,MAAR,KAAmB;AACtCD,MAAAA,KAAK,CAACF,aAAN,GAAsB,SAAtB;AACD,KAZY;AAcb,KAACN,OAAO,CAACc,QAAT,GAAoB,CAACN,KAAD,EAAQC,MAAR,KAAmB;AACrCD,MAAAA,KAAK,CAACF,aAAN,GAAsBG,MAAM,CAACM,KAAP,CAAaC,OAAnC;AACD;AAhBY;AALc,CAAD,CAA9B;AAwBA,eAAeb,UAAU,CAACc,OAA1B","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport { HYDRATE } from \"next-redux-wrapper\";\r\n\r\nexport const getUser = createAsyncThunk(\"getUser/posts\", async (user) => {\r\n  axios.get(`/api/${user}`);\r\n});\r\n\r\nconst usersSlice = createSlice({\r\n  name: \"users\",\r\n  initialState: {\r\n    getUserStatus: \"\",\r\n  },\r\n  extraReducers: {\r\n    [HYDRATE]: (state, action) => {\r\n      return {\r\n        ...state,\r\n        ...action.payload.some,\r\n      };\r\n    },\r\n    [getUser.pending]: (state, action) => {\r\n      state.getUserStatus = \"loading\";\r\n    },\r\n    [getUser.fulfilled]: (state, action) => {\r\n      state.getUserStatus = \"success\";\r\n    },\r\n\r\n    [getUser.rejected]: (state, action) => {\r\n      state.getUserStatus = action.error.message;\r\n    },\r\n  },\r\n});\r\nexport default usersSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}
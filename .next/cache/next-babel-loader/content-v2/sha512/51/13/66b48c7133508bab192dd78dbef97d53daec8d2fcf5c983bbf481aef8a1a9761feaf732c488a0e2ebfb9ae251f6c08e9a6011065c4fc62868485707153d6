{"ast":null,"code":"import _defineProperty from \"D:/Udemy/nextjs/06-onwards-to-a-bigger-project-starting-project/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"D:/Udemy/nextjs/06-onwards-to-a-bigger-project-starting-project/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/Udemy/nextjs/06-onwards-to-a-bigger-project-starting-project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _extraReducers;\n\nimport { createUserWithEmailAndPassword, GoogleAuthProvider, sendEmailVerification, signInWithEmailAndPassword, signInWithPopup, updateProfile } from \"@firebase/auth\";\nimport { addDoc, doc, getDoc, setDoc } from \"@firebase/firestore\";\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { auth, db } from \"../firebase/firebase\";\nexport var handleSignUp = createAsyncThunk(\"handleSignUp/auth\", /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(user) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return createUserWithEmailAndPassword(auth, user.email, user.password);\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return updateProfile(auth.currentUser, {\n              displayName: user.username\n            });\n\n          case 5:\n            _context.next = 7;\n            return setDoc(doc(db, \"users\", response.user.uid), {\n              username: displayName,\n              createdAt: new Date(),\n              email: user.email\n            });\n\n          case 7:\n            return _context.abrupt(\"return\", user);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}());\nexport var handleSignIn = createAsyncThunk(\"handleSignUp/auth\", /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(user) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return signInWithEmailAndPassword(auth, user.email, user.password);\n\n          case 2:\n            response = _context2.sent;\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}());\nexport var googleSignin = createAsyncThunk(\"handleSignUp/auth\", /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(user) {\n    var googleProvider, response, docSnap;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            googleProvider = new GoogleAuthProvider();\n            _context3.next = 3;\n            return signInWithPopup(auth, googleProvider);\n\n          case 3:\n            response = _context3.sent;\n            _context3.next = 6;\n            return getDoc(doc(db, \"users\", response.user.uid));\n\n          case 6:\n            docSnap = _context3.sent;\n\n            if (docSnap) {\n              _context3.next = 10;\n              break;\n            }\n\n            _context3.next = 10;\n            return setDoc(doc(db, \"users\", response.user.uid), {\n              username: response.user.displayName,\n              createdAt: new Date(),\n              email: response.user.email\n            });\n\n          case 10:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x3) {\n    return _ref3.apply(this, arguments);\n  };\n}());\nvar authSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    isLoggedIn: false,\n    response: \"\",\n    userInfo: \"\",\n    google: {\n      status: \"\"\n    }\n  },\n  reducers: {\n    loginHandler: function loginHandler(state, action) {\n      state.isLoggedIn = action.payload;\n    }\n  },\n  extraReducers: (_extraReducers = {}, _defineProperty(_extraReducers, handleSignUp.pending, function (state, action) {\n    state.response = \"loading\";\n  }), _defineProperty(_extraReducers, handleSignUp.fulfilled, function (state, action) {\n    state.response = \"success\";\n    state.userInfo = action.payload;\n  }), _defineProperty(_extraReducers, handleSignUp.rejected, function (state, action) {\n    console.log(action.error.message);\n  }), _defineProperty(_extraReducers, handleSignIn.pending, function (state, action) {\n    state.response = \"loading\";\n  }), _defineProperty(_extraReducers, handleSignIn.fulfilled, function (state, action) {\n    state.response = \"success\";\n  }), _defineProperty(_extraReducers, handleSignIn.rejected, function (state, action) {\n    console.log(action.error.message);\n  }), _extraReducers)\n});\nvar loginHandler = authSlice.actions.loginHandler;\nexport { loginHandler };\nexport default authSlice.reducer;","map":{"version":3,"sources":["D:/Udemy/nextjs/06-onwards-to-a-bigger-project-starting-project/store/authSlice.js"],"names":["createUserWithEmailAndPassword","GoogleAuthProvider","sendEmailVerification","signInWithEmailAndPassword","signInWithPopup","updateProfile","addDoc","doc","getDoc","setDoc","createAsyncThunk","createSlice","axios","auth","db","handleSignUp","user","email","password","response","currentUser","displayName","username","uid","createdAt","Date","handleSignIn","googleSignin","googleProvider","docSnap","authSlice","name","initialState","isLoggedIn","userInfo","google","status","reducers","loginHandler","state","action","payload","extraReducers","pending","fulfilled","rejected","console","log","error","message","actions","reducer"],"mappings":";;;;;;AAAA,SACEA,8BADF,EAEEC,kBAFF,EAGEC,qBAHF,EAIEC,0BAJF,EAKEC,eALF,EAMEC,aANF,QAOO,gBAPP;AAQA,SAASC,MAAT,EAAiBC,GAAjB,EAAsBC,MAAtB,EAA8BC,MAA9B,QAA4C,qBAA5C;AACA,SAASC,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,EAAf,QAAyB,sBAAzB;AAEA,OAAO,IAAMC,YAAY,GAAGL,gBAAgB,CAC1C,mBAD0C;AAAA,sEAE1C,iBAAOM,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACyBhB,8BAA8B,CACnDa,IADmD,EAEnDG,IAAI,CAACC,KAF8C,EAGnDD,IAAI,CAACE,QAH8C,CADvD;;AAAA;AACQC,YAAAA,QADR;AAAA;AAAA,mBAOQd,aAAa,CAACQ,IAAI,CAACO,WAAN,EAAmB;AACpCC,cAAAA,WAAW,EAAEL,IAAI,CAACM;AADkB,aAAnB,CAPrB;;AAAA;AAAA;AAAA,mBAUQb,MAAM,CAACF,GAAG,CAACO,EAAD,EAAK,OAAL,EAAcK,QAAQ,CAACH,IAAT,CAAcO,GAA5B,CAAJ,EAAsC;AAChDD,cAAAA,QAAQ,EAAED,WADsC;AAEhDG,cAAAA,SAAS,EAAE,IAAIC,IAAJ,EAFqC;AAGhDR,cAAAA,KAAK,EAAED,IAAI,CAACC;AAHoC,aAAtC,CAVd;;AAAA;AAAA,6CAeSD,IAfT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAF0C;;AAAA;AAAA;AAAA;AAAA,IAArC;AAoBP,OAAO,IAAMU,YAAY,GAAGhB,gBAAgB,CAC1C,mBAD0C;AAAA,uEAE1C,kBAAOM,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACyBb,0BAA0B,CAC/CU,IAD+C,EAE/CG,IAAI,CAACC,KAF0C,EAG/CD,IAAI,CAACE,QAH0C,CADnD;;AAAA;AACQC,YAAAA,QADR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAF0C;;AAAA;AAAA;AAAA;AAAA,IAArC;AAYP,OAAO,IAAMQ,YAAY,GAAGjB,gBAAgB,CAC1C,mBAD0C;AAAA,uEAE1C,kBAAOM,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACQY,YAAAA,cADR,GACyB,IAAI3B,kBAAJ,EADzB;AAAA;AAAA,mBAEyBG,eAAe,CAACS,IAAD,EAAOe,cAAP,CAFxC;;AAAA;AAEQT,YAAAA,QAFR;AAAA;AAAA,mBAGwBX,MAAM,CAACD,GAAG,CAACO,EAAD,EAAK,OAAL,EAAcK,QAAQ,CAACH,IAAT,CAAcO,GAA5B,CAAJ,CAH9B;;AAAA;AAGQM,YAAAA,OAHR;;AAAA,gBAIOA,OAJP;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAKUpB,MAAM,CAACF,GAAG,CAACO,EAAD,EAAK,OAAL,EAAcK,QAAQ,CAACH,IAAT,CAAcO,GAA5B,CAAJ,EAAsC;AAChDD,cAAAA,QAAQ,EAAEH,QAAQ,CAACH,IAAT,CAAcK,WADwB;AAEhDG,cAAAA,SAAS,EAAE,IAAIC,IAAJ,EAFqC;AAGhDR,cAAAA,KAAK,EAAEE,QAAQ,CAACH,IAAT,CAAcC;AAH2B,aAAtC,CALhB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAF0C;;AAAA;AAAA;AAAA;AAAA,IAArC;AAeP,IAAMa,SAAS,GAAGnB,WAAW,CAAC;AAC5BoB,EAAAA,IAAI,EAAE,MADsB;AAE5BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,UAAU,EAAE,KADA;AAEZd,IAAAA,QAAQ,EAAE,EAFE;AAGZe,IAAAA,QAAQ,EAAE,EAHE;AAIZC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV;AAJI,GAFc;AAQ5BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,YADQ,wBACKC,KADL,EACYC,MADZ,EACoB;AAC1BD,MAAAA,KAAK,CAACN,UAAN,GAAmBO,MAAM,CAACC,OAA1B;AACD;AAHO,GARkB;AAa5BC,EAAAA,aAAa,wDACV3B,YAAY,CAAC4B,OADH,EACa,UAACJ,KAAD,EAAQC,MAAR,EAAmB;AACzCD,IAAAA,KAAK,CAACpB,QAAN,GAAiB,SAAjB;AACD,GAHU,mCAIVJ,YAAY,CAAC6B,SAJH,EAIe,UAACL,KAAD,EAAQC,MAAR,EAAmB;AAC3CD,IAAAA,KAAK,CAACpB,QAAN,GAAiB,SAAjB;AACAoB,IAAAA,KAAK,CAACL,QAAN,GAAiBM,MAAM,CAACC,OAAxB;AACD,GAPU,mCASV1B,YAAY,CAAC8B,QATH,EASc,UAACN,KAAD,EAAQC,MAAR,EAAmB;AAC1CM,IAAAA,OAAO,CAACC,GAAR,CAAYP,MAAM,CAACQ,KAAP,CAAaC,OAAzB;AACD,GAXU,mCAYVvB,YAAY,CAACiB,OAZH,EAYa,UAACJ,KAAD,EAAQC,MAAR,EAAmB;AACzCD,IAAAA,KAAK,CAACpB,QAAN,GAAiB,SAAjB;AACD,GAdU,mCAeVO,YAAY,CAACkB,SAfH,EAee,UAACL,KAAD,EAAQC,MAAR,EAAmB;AAC3CD,IAAAA,KAAK,CAACpB,QAAN,GAAiB,SAAjB;AACD,GAjBU,mCAmBVO,YAAY,CAACmB,QAnBH,EAmBc,UAACN,KAAD,EAAQC,MAAR,EAAmB;AAC1CM,IAAAA,OAAO,CAACC,GAAR,CAAYP,MAAM,CAACQ,KAAP,CAAaC,OAAzB;AACD,GArBU;AAbe,CAAD,CAA7B;IAqCeX,Y,GAAiBR,SAAS,CAACoB,O,CAA3BZ,Y;;AACf,eAAeR,SAAS,CAACqB,OAAzB","sourcesContent":["import {\r\n  createUserWithEmailAndPassword,\r\n  GoogleAuthProvider,\r\n  sendEmailVerification,\r\n  signInWithEmailAndPassword,\r\n  signInWithPopup,\r\n  updateProfile,\r\n} from \"@firebase/auth\";\r\nimport { addDoc, doc, getDoc, setDoc } from \"@firebase/firestore\";\r\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport { auth, db } from \"../firebase/firebase\";\r\n\r\nexport const handleSignUp = createAsyncThunk(\r\n  \"handleSignUp/auth\",\r\n  async (user) => {\r\n    const response = await createUserWithEmailAndPassword(\r\n      auth,\r\n      user.email,\r\n      user.password\r\n    );\r\n    // const sentV = await sendEmailVerification(response.user);\r\n    await updateProfile(auth.currentUser, {\r\n      displayName: user.username,\r\n    });\r\n    await setDoc(doc(db, \"users\", response.user.uid), {\r\n      username: displayName,\r\n      createdAt: new Date(),\r\n      email: user.email,\r\n    });\r\n    return user;\r\n  }\r\n);\r\nexport const handleSignIn = createAsyncThunk(\r\n  \"handleSignUp/auth\",\r\n  async (user) => {\r\n    const response = await signInWithEmailAndPassword(\r\n      auth,\r\n      user.email,\r\n      user.password\r\n    );\r\n    // const sentV = await sendEmailVerification(response.user);\r\n  }\r\n);\r\n\r\nexport const googleSignin = createAsyncThunk(\r\n  \"handleSignUp/auth\",\r\n  async (user) => {\r\n    const googleProvider = new GoogleAuthProvider();\r\n    const response = await signInWithPopup(auth, googleProvider);\r\n    const docSnap = await getDoc(doc(db, \"users\", response.user.uid));\r\n    if (!docSnap) {\r\n      await setDoc(doc(db, \"users\", response.user.uid), {\r\n        username: response.user.displayName,\r\n        createdAt: new Date(),\r\n        email: response.user.email,\r\n      });\r\n    }\r\n  }\r\n);\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState: {\r\n    isLoggedIn: false,\r\n    response: \"\",\r\n    userInfo: \"\",\r\n    google: { status: \"\" },\r\n  },\r\n  reducers: {\r\n    loginHandler(state, action) {\r\n      state.isLoggedIn = action.payload;\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [handleSignUp.pending]: (state, action) => {\r\n      state.response = \"loading\";\r\n    },\r\n    [handleSignUp.fulfilled]: (state, action) => {\r\n      state.response = \"success\";\r\n      state.userInfo = action.payload;\r\n    },\r\n\r\n    [handleSignUp.rejected]: (state, action) => {\r\n      console.log(action.error.message);\r\n    },\r\n    [handleSignIn.pending]: (state, action) => {\r\n      state.response = \"loading\";\r\n    },\r\n    [handleSignIn.fulfilled]: (state, action) => {\r\n      state.response = \"success\";\r\n    },\r\n\r\n    [handleSignIn.rejected]: (state, action) => {\r\n      console.log(action.error.message);\r\n    },\r\n  },\r\n});\r\nexport const { loginHandler } = authSlice.actions;\r\nexport default authSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}
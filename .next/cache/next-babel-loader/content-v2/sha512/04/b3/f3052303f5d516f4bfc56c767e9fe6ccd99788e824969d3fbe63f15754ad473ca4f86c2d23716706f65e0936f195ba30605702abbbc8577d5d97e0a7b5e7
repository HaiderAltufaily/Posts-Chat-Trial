{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { HYDRATE } from \"next-redux-wrapper\";\nexport const submitPost = createAsyncThunk(\"submitPost/posts\", async postData => {\n  return axios.post(\"/api/new-post\", postData);\n});\nexport const deletePost = createAsyncThunk(\"deletePost/posts\", async postId => {\n  axios.delete(`/api/posts/${postId}`);\n});\nexport const addLike = createAsyncThunk(\"addLike/posts\", async postId => {\n  axios.post(`/api/postLikes/${postId}`);\n});\nconst postsSlice = createSlice({\n  name: \"posts\",\n  initialState: {\n    postStatus: \"\",\n    deletePostStatus: \"\",\n    realTimePosts: [],\n    likeStatus: \"\"\n  },\n  reducers: {\n    setPosts(state, action) {\n      state.realTimePosts = action.payload;\n    }\n\n  },\n  extraReducers: {\n    [HYDRATE]: (state, action) => {\n      return _objectSpread(_objectSpread({}, state), action.payload.some);\n    },\n    [submitPost.pending]: (state, action) => {\n      state.postStatus = \"loading\";\n    },\n    [submitPost.fulfilled]: (state, action) => {\n      state.postStatus = \"success\";\n    },\n    [submitPost.rejected]: (state, action) => {\n      state.postStatus = action.error.message;\n    },\n    [deletePost.pending]: (state, action) => {\n      state.deletePostStatus = \"loading\";\n    },\n    [deletePost.fulfilled]: (state, action) => {\n      state.deletePostStatus = \"success\";\n    },\n    [deletePost.rejected]: (state, action) => {\n      state.deletePostStatus = action.error.message;\n    },\n    [addLike.pending]: (state, action) => {\n      state.likeStatus = \"loading\";\n    },\n    [addLike.fulfilled]: (state, action) => {\n      console.log(\"wewe\", action.payload);\n      state.likeStatus = \"success\";\n    },\n    [addLike.rejected]: (state, action) => {\n      state.likeStatus = action.error.message;\n    }\n  }\n});\nexport const {\n  setPosts\n} = postsSlice.actions;\nexport default postsSlice.reducer;","map":{"version":3,"sources":["D:/Udemy/nextjs/06-onwards-to-a-bigger-project-starting-project/store/postsSlice.js"],"names":["createAsyncThunk","createSlice","axios","HYDRATE","submitPost","postData","post","deletePost","postId","delete","addLike","postsSlice","name","initialState","postStatus","deletePostStatus","realTimePosts","likeStatus","reducers","setPosts","state","action","payload","extraReducers","some","pending","fulfilled","rejected","error","message","console","log","actions","reducer"],"mappings":"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","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport { HYDRATE } from \"next-redux-wrapper\";\r\nexport const submitPost = createAsyncThunk(\r\n  \"submitPost/posts\",\r\n  async (postData) => {\r\n    return axios.post(\"/api/new-post\", postData);\r\n  }\r\n);\r\nexport const deletePost = createAsyncThunk(\r\n  \"deletePost/posts\",\r\n  async (postId) => {\r\n    axios.delete(`/api/posts/${postId}`);\r\n  }\r\n);\r\nexport const addLike = createAsyncThunk(\"addLike/posts\", async (postId) => {\r\n  axios.post(`/api/postLikes/${postId}`);\r\n});\r\nconst postsSlice = createSlice({\r\n  name: \"posts\",\r\n  initialState: {\r\n    postStatus: \"\",\r\n    deletePostStatus: \"\",\r\n    realTimePosts: [],\r\n    likeStatus: \"\",\r\n  },\r\n  reducers: {\r\n    setPosts(state, action) {\r\n      state.realTimePosts = action.payload;\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [HYDRATE]: (state, action) => {\r\n      return {\r\n        ...state,\r\n        ...action.payload.some,\r\n      };\r\n    },\r\n\r\n    [submitPost.pending]: (state, action) => {\r\n      state.postStatus = \"loading\";\r\n    },\r\n    [submitPost.fulfilled]: (state, action) => {\r\n      state.postStatus = \"success\";\r\n    },\r\n\r\n    [submitPost.rejected]: (state, action) => {\r\n      state.postStatus = action.error.message;\r\n    },\r\n\r\n    [deletePost.pending]: (state, action) => {\r\n      state.deletePostStatus = \"loading\";\r\n    },\r\n    [deletePost.fulfilled]: (state, action) => {\r\n      state.deletePostStatus = \"success\";\r\n    },\r\n\r\n    [deletePost.rejected]: (state, action) => {\r\n      state.deletePostStatus = action.error.message;\r\n    },\r\n    [addLike.pending]: (state, action) => {\r\n      state.likeStatus = \"loading\";\r\n    },\r\n    [addLike.fulfilled]: (state, action) => {\r\n      console.log(\"wewe\", action.payload);\r\n      state.likeStatus = \"success\";\r\n    },\r\n\r\n    [addLike.rejected]: (state, action) => {\r\n      state.likeStatus = action.error.message;\r\n    },\r\n  },\r\n});\r\nexport const { setPosts } = postsSlice.actions;\r\nexport default postsSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}
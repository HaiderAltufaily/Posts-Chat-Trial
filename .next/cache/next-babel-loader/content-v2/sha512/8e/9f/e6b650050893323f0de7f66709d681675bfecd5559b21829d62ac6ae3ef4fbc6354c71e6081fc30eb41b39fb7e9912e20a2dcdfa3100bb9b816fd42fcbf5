{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Udemy\\\\nextjs\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\_app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport \"../styles/globals.css\";\nimport Layout from \"../components/layout/Layout\";\nimport { wrapper } from \"../store/store\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { auth, db } from \"../firebase/firebase\";\nimport { useEffect, useState } from \"react\";\nimport { onAuthStateChanged } from \"@firebase/auth\";\nimport { getCurrent, loginHandler, setCurrentUser } from \"../store/authSlice\";\nimport { collection, doc, getDoc, onSnapshot, orderBy, query } from \"@firebase/firestore\";\nimport router from \"next/router\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { addLike, setPosts } from \"../store/postsSlice\";\nimport moment from \"moment\";\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  const {\n    0: show,\n    1: setShow\n  } = useState(false);\n  const aaa = useSelector(state => state.auth);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const unsub = onAuthStateChanged(auth, user => {\n      if (user) {\n        // user.emailVerified && router.push(\"/\");\n        // dispatch(getCurrent());\n        onSnapshot(doc(db, \"users\", user.uid), snap => dispatch(setCurrentUser(snap.data()))); // user.emailVerified && dispatch(loginHandler(true));\n      }\n    });\n    return () => unsub();\n  }, []);\n  useEffect(() => {\n    const q = query(collection(db, \"posts\"), orderBy(\"time\", \"desc\"));\n    const unsub = onSnapshot(q, snpa => {\n      const posts = snpa.docs.map(doc => {\n        return _objectSpread(_objectSpread({}, doc.data()), {}, {\n          id: doc.id,\n          time: moment(doc.data().time.toDate()).calendar()\n        });\n      });\n      dispatch(setPosts(posts)); // if(auth.currentUser)\n      // dispatch(addLike(\"awda\"));\n    });\n    return () => unsub();\n  }); // useEffect(() => {\n  //   const unsub = onSnapshot(\n  //     doc(db, \"users\", auth.currentUser?.uid),\n  //     (snap) => {\n  //       dispatch(setCurrentUser(snap.data()));\n  //     }\n  //   );\n  //   if (!auth.currentUser) {\n  //     dispatch(setCurrentUser(null));\n  //   }\n  //   return () => unsub();\n  // }, []);\n  // console.log(aaa.isLoggedIn);\n  // console.log(auth.currentUser);\n\n  return /*#__PURE__*/_jsxDEV(ChakraProvider, {\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\nexport default wrapper.withRedux(MyApp);","map":{"version":3,"sources":["D:/Udemy/nextjs/06-onwards-to-a-bigger-project-starting-project/pages/_app.js"],"names":["Layout","wrapper","useDispatch","useSelector","auth","db","useEffect","useState","onAuthStateChanged","getCurrent","loginHandler","setCurrentUser","collection","doc","getDoc","onSnapshot","orderBy","query","router","ChakraProvider","addLike","setPosts","moment","MyApp","Component","pageProps","show","setShow","aaa","state","dispatch","unsub","user","uid","snap","data","q","snpa","posts","docs","map","id","time","toDate","calendar","withRedux"],"mappings":";;;;;;;;;AAAA,OAAO,uBAAP;AACA,OAAOA,MAAP,MAAmB,6BAAnB;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,EAAeC,EAAf,QAAyB,sBAAzB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,kBAAT,QAAmC,gBAAnC;AACA,SAASC,UAAT,EAAqBC,YAArB,EAAmCC,cAAnC,QAAyD,oBAAzD;AACA,SACEC,UADF,EAEEC,GAFF,EAGEC,MAHF,EAIEC,UAJF,EAKEC,OALF,EAMEC,KANF,QAOO,qBAPP;AAQA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,qBAAlC;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AACA,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAf,EAAyC;AACvC,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBpB,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAMqB,GAAG,GAAGzB,WAAW,CAAE0B,KAAD,IAAWA,KAAK,CAACzB,IAAlB,CAAvB;AAEA,QAAM0B,QAAQ,GAAG5B,WAAW,EAA5B;AACAI,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMyB,KAAK,GAAGvB,kBAAkB,CAACJ,IAAD,EAAQ4B,IAAD,IAAU;AAC/C,UAAIA,IAAJ,EAAU;AACR;AAEA;AACAjB,QAAAA,UAAU,CAACF,GAAG,CAACR,EAAD,EAAK,OAAL,EAAc2B,IAAI,CAACC,GAAnB,CAAJ,EAA8BC,IAAD,IACrCJ,QAAQ,CAACnB,cAAc,CAACuB,IAAI,CAACC,IAAL,EAAD,CAAf,CADA,CAAV,CAJQ,CAOR;AACD;AACF,KAV+B,CAAhC;AAYA,WAAO,MAAMJ,KAAK,EAAlB;AACD,GAdQ,EAcN,EAdM,CAAT;AAeAzB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM8B,CAAC,GAAGnB,KAAK,CAACL,UAAU,CAACP,EAAD,EAAK,OAAL,CAAX,EAA0BW,OAAO,CAAC,MAAD,EAAS,MAAT,CAAjC,CAAf;AACA,UAAMe,KAAK,GAAGhB,UAAU,CAACqB,CAAD,EAAKC,IAAD,IAAU;AACpC,YAAMC,KAAK,GAAGD,IAAI,CAACE,IAAL,CAAUC,GAAV,CAAe3B,GAAD,IAAS;AACnC,+CACKA,GAAG,CAACsB,IAAJ,EADL;AAEEM,UAAAA,EAAE,EAAE5B,GAAG,CAAC4B,EAFV;AAGEC,UAAAA,IAAI,EAAEpB,MAAM,CAACT,GAAG,CAACsB,IAAJ,GAAWO,IAAX,CAAgBC,MAAhB,EAAD,CAAN,CAAiCC,QAAjC;AAHR;AAKD,OANa,CAAd;AAOAd,MAAAA,QAAQ,CAACT,QAAQ,CAACiB,KAAD,CAAT,CAAR,CARoC,CASpC;AACA;AACD,KAXuB,CAAxB;AAYA,WAAO,MAAMP,KAAK,EAAlB;AACD,GAfQ,CAAT,CApBuC,CAoCvC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA,sBACE,QAAC,cAAD;AAAA,2BACE,QAAC,MAAD;AAAA,iBACG,GADH,eAEE,QAAC,SAAD,oBAAeN,SAAf;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;AAED,eAAexB,OAAO,CAAC4C,SAAR,CAAkBtB,KAAlB,CAAf","sourcesContent":["import \"../styles/globals.css\";\nimport Layout from \"../components/layout/Layout\";\nimport { wrapper } from \"../store/store\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { auth, db } from \"../firebase/firebase\";\nimport { useEffect, useState } from \"react\";\nimport { onAuthStateChanged } from \"@firebase/auth\";\nimport { getCurrent, loginHandler, setCurrentUser } from \"../store/authSlice\";\nimport {\n  collection,\n  doc,\n  getDoc,\n  onSnapshot,\n  orderBy,\n  query,\n} from \"@firebase/firestore\";\nimport router from \"next/router\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { addLike, setPosts } from \"../store/postsSlice\";\nimport moment from \"moment\";\nfunction MyApp({ Component, pageProps }) {\n  const [show, setShow] = useState(false);\n  const aaa = useSelector((state) => state.auth);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const unsub = onAuthStateChanged(auth, (user) => {\n      if (user) {\n        // user.emailVerified && router.push(\"/\");\n\n        // dispatch(getCurrent());\n        onSnapshot(doc(db, \"users\", user.uid), (snap) =>\n          dispatch(setCurrentUser(snap.data()))\n        );\n        // user.emailVerified && dispatch(loginHandler(true));\n      }\n    });\n\n    return () => unsub();\n  }, []);\n  useEffect(() => {\n    const q = query(collection(db, \"posts\"), orderBy(\"time\", \"desc\"));\n    const unsub = onSnapshot(q, (snpa) => {\n      const posts = snpa.docs.map((doc) => {\n        return {\n          ...doc.data(),\n          id: doc.id,\n          time: moment(doc.data().time.toDate()).calendar(),\n        };\n      });\n      dispatch(setPosts(posts));\n      // if(auth.currentUser)\n      // dispatch(addLike(\"awda\"));\n    });\n    return () => unsub();\n  });\n  // useEffect(() => {\n\n  //   const unsub = onSnapshot(\n  //     doc(db, \"users\", auth.currentUser?.uid),\n  //     (snap) => {\n  //       dispatch(setCurrentUser(snap.data()));\n  //     }\n  //   );\n  //   if (!auth.currentUser) {\n  //     dispatch(setCurrentUser(null));\n  //   }\n  //   return () => unsub();\n  // }, []);\n\n  // console.log(aaa.isLoggedIn);\n  // console.log(auth.currentUser);\n\n  return (\n    <ChakraProvider>\n      <Layout>\n        {\" \"}\n        <Component {...pageProps} />\n      </Layout>\n    </ChakraProvider>\n  );\n}\n\nexport default wrapper.withRedux(MyApp);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport usersSlice from \"./slice\";\nimport { createWrapper } from \"next-redux-wrapper\";\nimport { nextReduxCookieMiddleware, wrapMakeStore } from \"next-redux-cookie-wrapper\";\nimport authSlice from \"./authSlice\";\n\nconst makeStore = () => configureStore({\n  reducer: {\n    users: usersSlice,\n    auth: authSlice\n  }\n}); // const makeStore = wrapMakeStore(() =>\n//   configureStore({\n//     reducer: { users: usersSlice },\n//     middleware: (getDefaultMiddleware) =>\n//       getDefaultMiddleware().prepend(\n//         nextReduxCookieMiddleware({\n//           subtrees: [\"my.subtree\"],\n//         })\n//       ),\n//   })\n// );\n\n\nexport const wrapper = createWrapper(makeStore);","map":{"version":3,"sources":["D:/Udemy/nextjs/06-onwards-to-a-bigger-project-starting-project/store/store.js"],"names":["configureStore","usersSlice","createWrapper","nextReduxCookieMiddleware","wrapMakeStore","authSlice","makeStore","reducer","users","auth","wrapper"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,OAAOC,UAAP,MAAuB,SAAvB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SACEC,yBADF,EAEEC,aAFF,QAGO,2BAHP;AAIA,OAAOC,SAAP,MAAsB,aAAtB;;AACA,MAAMC,SAAS,GAAG,MAChBN,cAAc,CAAC;AACbO,EAAAA,OAAO,EAAE;AACPC,IAAAA,KAAK,EAAEP,UADA;AAEPQ,IAAAA,IAAI,EAAEJ;AAFC;AADI,CAAD,CADhB,C,CAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,MAAMK,OAAO,GAAGR,aAAa,CAACI,SAAD,CAA7B","sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\r\nimport usersSlice from \"./slice\";\r\nimport { createWrapper } from \"next-redux-wrapper\";\r\nimport {\r\n  nextReduxCookieMiddleware,\r\n  wrapMakeStore,\r\n} from \"next-redux-cookie-wrapper\";\r\nimport authSlice from \"./authSlice\";\r\nconst makeStore = () =>\r\n  configureStore({\r\n    reducer: {\r\n      users: usersSlice,\r\n      auth: authSlice,\r\n    },\r\n  });\r\n// const makeStore = wrapMakeStore(() =>\r\n//   configureStore({\r\n//     reducer: { users: usersSlice },\r\n//     middleware: (getDefaultMiddleware) =>\r\n//       getDefaultMiddleware().prepend(\r\n//         nextReduxCookieMiddleware({\r\n//           subtrees: [\"my.subtree\"],\r\n//         })\r\n//       ),\r\n//   })\r\n// );\r\nexport const wrapper = createWrapper(makeStore);\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { createUserWithEmailAndPassword, sendEmailVerification, signInWithEmailAndPassword } from \"@firebase/auth\";\nimport { doc, setDoc } from \"@firebase/firestore\";\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { auth, db } from \"../firebase/firebase\";\nexport const handleSignUp = createAsyncThunk(\"handleSignUp/auth\", async user => {\n  const response = await createUserWithEmailAndPassword(auth, user.email, user.password); // const sentV = await sendEmailVerification(response.user);\n\n  auth.currentUser.emailVerified && (await setDoc(doc(db, \"users\", response.user.uid), {\n    username: user.username,\n    createdAt: new Date(),\n    email: user.email\n  }));\n});\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    isLoggedIn: false,\n    response: \"\"\n  },\n  reducers: {\n    loginHandler(state, action) {\n      state.isLoggedIn === action.payload;\n    }\n\n  },\n  extraReducers: {\n    [handleSignUp.pending]: (state, action) => {\n      state.response = \"loading\";\n    },\n    [handleSignUp.fulfilled]: (state, action) => {\n      state.response = \"success\";\n    },\n    [handleSignUp.rejected]: (state, action) => {\n      console.log(action.error.message);\n    }\n  }\n});\nexport default authSlice.reducer;","map":{"version":3,"sources":["D:/Udemy/nextjs/06-onwards-to-a-bigger-project-starting-project/store/authSlice.js"],"names":["createUserWithEmailAndPassword","sendEmailVerification","signInWithEmailAndPassword","doc","setDoc","createAsyncThunk","createSlice","axios","auth","db","handleSignUp","user","response","email","password","currentUser","emailVerified","uid","username","createdAt","Date","authSlice","name","initialState","isLoggedIn","reducers","loginHandler","state","action","payload","extraReducers","pending","fulfilled","rejected","console","log","error","message","reducer"],"mappings":"AAAA,SACEA,8BADF,EAEEC,qBAFF,EAGEC,0BAHF,QAIO,gBAJP;AAKA,SAASC,GAAT,EAAcC,MAAd,QAA4B,qBAA5B;AACA,SAASC,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,EAAf,QAAyB,sBAAzB;AAEA,OAAO,MAAMC,YAAY,GAAGL,gBAAgB,CAC1C,mBAD0C,EAE1C,MAAOM,IAAP,IAAgB;AACd,QAAMC,QAAQ,GAAG,MAAMZ,8BAA8B,CACnDQ,IADmD,EAEnDG,IAAI,CAACE,KAF8C,EAGnDF,IAAI,CAACG,QAH8C,CAArD,CADc,CAMd;;AAEAN,EAAAA,IAAI,CAACO,WAAL,CAAiBC,aAAjB,KACG,MAAMZ,MAAM,CAACD,GAAG,CAACM,EAAD,EAAK,OAAL,EAAcG,QAAQ,CAACD,IAAT,CAAcM,GAA5B,CAAJ,EAAsC;AACjDC,IAAAA,QAAQ,EAAEP,IAAI,CAACO,QADkC;AAEjDC,IAAAA,SAAS,EAAE,IAAIC,IAAJ,EAFsC;AAGjDP,IAAAA,KAAK,EAAEF,IAAI,CAACE;AAHqC,GAAtC,CADf;AAMD,CAhByC,CAArC;AAmBP,MAAMQ,SAAS,GAAGf,WAAW,CAAC;AAC5BgB,EAAAA,IAAI,EAAE,MADsB;AAE5BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,UAAU,EAAE,KADA;AAEZZ,IAAAA,QAAQ,EAAE;AAFE,GAFc;AAM5Ba,EAAAA,QAAQ,EAAE;AACRC,IAAAA,YAAY,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAC1BD,MAAAA,KAAK,CAACH,UAAN,KAAqBI,MAAM,CAACC,OAA5B;AACD;;AAHO,GANkB;AAW5BC,EAAAA,aAAa,EAAE;AACb,KAACpB,YAAY,CAACqB,OAAd,GAAwB,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AACzCD,MAAAA,KAAK,CAACf,QAAN,GAAiB,SAAjB;AACD,KAHY;AAIb,KAACF,YAAY,CAACsB,SAAd,GAA0B,CAACL,KAAD,EAAQC,MAAR,KAAmB;AAC3CD,MAAAA,KAAK,CAACf,QAAN,GAAiB,SAAjB;AACD,KANY;AAQb,KAACF,YAAY,CAACuB,QAAd,GAAyB,CAACN,KAAD,EAAQC,MAAR,KAAmB;AAC1CM,MAAAA,OAAO,CAACC,GAAR,CAAYP,MAAM,CAACQ,KAAP,CAAaC,OAAzB;AACD;AAVY;AAXa,CAAD,CAA7B;AAwBA,eAAehB,SAAS,CAACiB,OAAzB","sourcesContent":["import {\r\n  createUserWithEmailAndPassword,\r\n  sendEmailVerification,\r\n  signInWithEmailAndPassword,\r\n} from \"@firebase/auth\";\r\nimport { doc, setDoc } from \"@firebase/firestore\";\r\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport { auth, db } from \"../firebase/firebase\";\r\n\r\nexport const handleSignUp = createAsyncThunk(\r\n  \"handleSignUp/auth\",\r\n  async (user) => {\r\n    const response = await createUserWithEmailAndPassword(\r\n      auth,\r\n      user.email,\r\n      user.password\r\n    );\r\n    // const sentV = await sendEmailVerification(response.user);\r\n\r\n    auth.currentUser.emailVerified &&\r\n      (await setDoc(doc(db, \"users\", response.user.uid), {\r\n        username: user.username,\r\n        createdAt: new Date(),\r\n        email: user.email,\r\n      }));\r\n  }\r\n);\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState: {\r\n    isLoggedIn: false,\r\n    response: \"\",\r\n  },\r\n  reducers: {\r\n    loginHandler(state, action) {\r\n      state.isLoggedIn === action.payload;\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [handleSignUp.pending]: (state, action) => {\r\n      state.response = \"loading\";\r\n    },\r\n    [handleSignUp.fulfilled]: (state, action) => {\r\n      state.response = \"success\";\r\n    },\r\n\r\n    [handleSignUp.rejected]: (state, action) => {\r\n      console.log(action.error.message);\r\n    },\r\n  },\r\n});\r\nexport default authSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}
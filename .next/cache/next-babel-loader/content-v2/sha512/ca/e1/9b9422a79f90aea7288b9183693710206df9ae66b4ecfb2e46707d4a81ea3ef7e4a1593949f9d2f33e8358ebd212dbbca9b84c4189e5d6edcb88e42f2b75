{"ast":null,"code":"import _defineProperty from \"D:/Udemy/nextjs/06-onwards-to-a-bigger-project-starting-project/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"D:/Udemy/nextjs/06-onwards-to-a-bigger-project-starting-project/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/Udemy/nextjs/06-onwards-to-a-bigger-project-starting-project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _extraReducers;\n\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport var addReply = createAsyncThunk(\"addReply/replies\", /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var postId, reply;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            postId = _ref.postId, reply = _ref.reply;\n            console.log(reply);\n            return _context.abrupt(\"return\", axios.post(\"/api/replies/\".concat(postId), reply));\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}());\nvar repliesSlice = createSlice({\n  name: \"replies\",\n  initialState: {\n    addReplyStatus: \"\"\n  },\n  reducers: {},\n  extraReducers: (_extraReducers = {}, _defineProperty(_extraReducers, addReply.pending, function (state, action) {\n    state.addReplyStatus = \"loading\";\n  }), _defineProperty(_extraReducers, addReply.fulfilled, function (state, action) {\n    state.addReplyStatus = \"success\";\n  }), _defineProperty(_extraReducers, addReply.rejected, function (state, action) {\n    state.addReplyStatus = action.error.message;\n  }), _extraReducers)\n});\nexport default repliesSlice.reducer;","map":{"version":3,"sources":["D:/Udemy/nextjs/06-onwards-to-a-bigger-project-starting-project/store/repliesSlice.js"],"names":["createAsyncThunk","createSlice","axios","addReply","postId","reply","console","log","post","repliesSlice","name","initialState","addReplyStatus","reducers","extraReducers","pending","state","action","fulfilled","rejected","error","message","reducer"],"mappings":";;;;;;AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,QAAQ,GAAGH,gBAAgB,CACtC,kBADsC;AAAA,uEAEtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAASI,YAAAA,MAAT,QAASA,MAAT,EAAiBC,KAAjB,QAAiBA,KAAjB;AACEC,YAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AADF,6CAESH,KAAK,CAACM,IAAN,wBAA2BJ,MAA3B,GAAqCC,KAArC,CAFT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAFsC;;AAAA;AAAA;AAAA;AAAA,IAAjC;AAOP,IAAMI,YAAY,GAAGR,WAAW,CAAC;AAC/BS,EAAAA,IAAI,EAAE,SADyB;AAE/BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,cAAc,EAAE;AADJ,GAFiB;AAK/BC,EAAAA,QAAQ,EAAE,EALqB;AAM/BC,EAAAA,aAAa,wDACVX,QAAQ,CAACY,OADC,EACS,UAACC,KAAD,EAAQC,MAAR,EAAmB;AACrCD,IAAAA,KAAK,CAACJ,cAAN,GAAuB,SAAvB;AACD,GAHU,mCAIVT,QAAQ,CAACe,SAJC,EAIW,UAACF,KAAD,EAAQC,MAAR,EAAmB;AACvCD,IAAAA,KAAK,CAACJ,cAAN,GAAuB,SAAvB;AACD,GANU,mCAQVT,QAAQ,CAACgB,QARC,EAQU,UAACH,KAAD,EAAQC,MAAR,EAAmB;AACtCD,IAAAA,KAAK,CAACJ,cAAN,GAAuBK,MAAM,CAACG,KAAP,CAAaC,OAApC;AACD,GAVU;AANkB,CAAD,CAAhC;AAmBA,eAAeZ,YAAY,CAACa,OAA5B","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nexport const addReply = createAsyncThunk(\r\n  \"addReply/replies\",\r\n  async ({ postId, reply }) => {\r\n    console.log(reply);\r\n    return axios.post(`/api/replies/${postId}`, reply);\r\n  }\r\n);\r\nconst repliesSlice = createSlice({\r\n  name: \"replies\",\r\n  initialState: {\r\n    addReplyStatus: \"\",\r\n  },\r\n  reducers: {},\r\n  extraReducers: {\r\n    [addReply.pending]: (state, action) => {\r\n      state.addReplyStatus = \"loading\";\r\n    },\r\n    [addReply.fulfilled]: (state, action) => {\r\n      state.addReplyStatus = \"success\";\r\n    },\r\n\r\n    [addReply.rejected]: (state, action) => {\r\n      state.addReplyStatus = action.error.message;\r\n    },\r\n  },\r\n});\r\nexport default repliesSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}
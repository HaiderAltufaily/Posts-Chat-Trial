{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Udemy\\\\nextjs\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[postId]\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { collection, doc, getDocs, getDoc } from \"@firebase/firestore\";\nimport moment from \"moment\";\nimport React, { Fragment } from \"react\";\nimport MeetUpDetails from \"../../components/meetups/MeetUpDetails\";\nimport db from \"../../firebase/firebase\";\n\nfunction MeetUpDetailsPage({\n  posts\n}) {\n  console.log(posts);\n  return /*#__PURE__*/_jsxDEV(MeetUpDetails // title={meetupData.title}\n  // address={meetupData.address}\n  // description={meetupData.description}\n  // image={meetupData.image}\n  , {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n} // export async function getStaticPaths() {\n//   const docc = await getDocs(collection(db, \"meetups\"));\n//   const docs = docc.docs.map((doc) => {\n//     return {\n//       ...doc.data(),\n//       id: doc.id,\n//     };\n//   });\n//   return {\n//     fallback: true,\n//     paths: docs.map((doc) => {\n//       return { params: { meetupId: doc.id } };\n//     }),\n//   };\n// }\n\n\nexport async function getStaticPaths() {\n  const docs = await getDocs(collection(db, \"posts\"));\n  const posts = docs.docs.map(doc => {\n    return _objectSpread(_objectSpread({}, doc.data()), {}, {\n      id: doc.id\n    });\n  });\n  return {\n    fallback: true,\n    paths: posts.map(post => {\n      return {\n        params: {\n          postId: post.id\n        }\n      };\n    })\n  };\n}\nexport async function getStaticProps(context) {\n  const postId = context.params.postId;\n  const docc = await getDoc(doc(db, \"posts\", postId)).then(data => {\n    return _objectSpread(_objectSpread({}, data.data()), {}, {\n      id: data.id\n    });\n  });\n\n  const newDoc = _objectSpread(_objectSpread({}, docc), {}, {\n    time: moment(docc.time.toDate()).calendar()\n  });\n\n  console.log(newDoc);\n  return {\n    props: {\n      posts: newDoc\n    }\n  };\n}\nexport default MeetUpDetailsPage;","map":{"version":3,"sources":["D:/Udemy/nextjs/06-onwards-to-a-bigger-project-starting-project/pages/[postId]/index.js"],"names":["collection","doc","getDocs","getDoc","moment","React","Fragment","MeetUpDetails","db","MeetUpDetailsPage","posts","console","log","getStaticPaths","docs","map","data","id","fallback","paths","post","params","postId","getStaticProps","context","docc","then","newDoc","time","toDate","calendar","props"],"mappings":";;;;;;;;;AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,OAA1B,EAAmCC,MAAnC,QAAiD,qBAAjD;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,aAAP,MAA0B,wCAA1B;AACA,OAAOC,EAAP,MAAe,yBAAf;;AACA,SAASC,iBAAT,CAA2B;AAAEC,EAAAA;AAAF,CAA3B,EAAsC;AACpCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,sBACE,QAAC,aAAD,CACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,C,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,eAAeG,cAAf,GAAgC;AACrC,QAAMC,IAAI,GAAG,MAAMZ,OAAO,CAACF,UAAU,CAACQ,EAAD,EAAK,OAAL,CAAX,CAA1B;AACA,QAAME,KAAK,GAAGI,IAAI,CAACA,IAAL,CAAUC,GAAV,CAAed,GAAD,IAAS;AACnC,2CAAYA,GAAG,CAACe,IAAJ,EAAZ;AAAwBC,MAAAA,EAAE,EAAEhB,GAAG,CAACgB;AAAhC;AACD,GAFa,CAAd;AAGA,SAAO;AACLC,IAAAA,QAAQ,EAAE,IADL;AAELC,IAAAA,KAAK,EAAET,KAAK,CAACK,GAAN,CAAWK,IAAD,IAAU;AACzB,aAAO;AAAEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,MAAM,EAAEF,IAAI,CAACH;AAAf;AAAV,OAAP;AACD,KAFM;AAFF,GAAP;AAMD;AACD,OAAO,eAAeM,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMF,MAAM,GAAGE,OAAO,CAACH,MAAR,CAAeC,MAA9B;AACA,QAAMG,IAAI,GAAG,MAAMtB,MAAM,CAACF,GAAG,CAACO,EAAD,EAAK,OAAL,EAAcc,MAAd,CAAJ,CAAN,CAAiCI,IAAjC,CAAuCV,IAAD,IAAU;AACjE,2CAAYA,IAAI,CAACA,IAAL,EAAZ;AAAyBC,MAAAA,EAAE,EAAED,IAAI,CAACC;AAAlC;AACD,GAFkB,CAAnB;;AAIA,QAAMU,MAAM,mCAAQF,IAAR;AAAcG,IAAAA,IAAI,EAAExB,MAAM,CAACqB,IAAI,CAACG,IAAL,CAAUC,MAAV,EAAD,CAAN,CAA2BC,QAA3B;AAApB,IAAZ;;AACAnB,EAAAA,OAAO,CAACC,GAAR,CAAYe,MAAZ;AACA,SAAO;AACLI,IAAAA,KAAK,EAAE;AACLrB,MAAAA,KAAK,EAAEiB;AADF;AADF,GAAP;AAKD;AAED,eAAelB,iBAAf","sourcesContent":["import { collection, doc, getDocs, getDoc } from \"@firebase/firestore\";\r\nimport moment from \"moment\";\r\nimport React, { Fragment } from \"react\";\r\nimport MeetUpDetails from \"../../components/meetups/MeetUpDetails\";\r\nimport db from \"../../firebase/firebase\";\r\nfunction MeetUpDetailsPage({ posts }) {\r\n  console.log(posts);\r\n  return (\r\n    <MeetUpDetails\r\n    // title={meetupData.title}\r\n    // address={meetupData.address}\r\n    // description={meetupData.description}\r\n    // image={meetupData.image}\r\n    />\r\n  );\r\n}\r\n// export async function getStaticPaths() {\r\n//   const docc = await getDocs(collection(db, \"meetups\"));\r\n//   const docs = docc.docs.map((doc) => {\r\n//     return {\r\n//       ...doc.data(),\r\n//       id: doc.id,\r\n//     };\r\n//   });\r\n//   return {\r\n//     fallback: true,\r\n//     paths: docs.map((doc) => {\r\n//       return { params: { meetupId: doc.id } };\r\n//     }),\r\n//   };\r\n// }\r\nexport async function getStaticPaths() {\r\n  const docs = await getDocs(collection(db, \"posts\"));\r\n  const posts = docs.docs.map((doc) => {\r\n    return { ...doc.data(), id: doc.id };\r\n  });\r\n  return {\r\n    fallback: true,\r\n    paths: posts.map((post) => {\r\n      return { params: { postId: post.id } };\r\n    }),\r\n  };\r\n}\r\nexport async function getStaticProps(context) {\r\n  const postId = context.params.postId;\r\n  const docc = await getDoc(doc(db, \"posts\", postId)).then((data) => {\r\n    return { ...data.data(), id: data.id };\r\n  });\r\n\r\n  const newDoc = { ...docc, time: moment(docc.time.toDate()).calendar() };\r\n  console.log(newDoc);\r\n  return {\r\n    props: {\r\n      posts: newDoc,\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetUpDetailsPage;\r\n"]},"metadata":{},"sourceType":"module"}
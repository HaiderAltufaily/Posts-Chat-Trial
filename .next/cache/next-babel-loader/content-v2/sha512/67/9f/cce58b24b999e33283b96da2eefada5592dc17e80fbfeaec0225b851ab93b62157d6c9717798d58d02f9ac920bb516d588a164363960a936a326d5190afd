{"ast":null,"code":"import _defineProperty from \"D:/Udemy/nextjs/06-onwards-to-a-bigger-project-starting-project/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"D:/Udemy/nextjs/06-onwards-to-a-bigger-project-starting-project/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/Udemy/nextjs/06-onwards-to-a-bigger-project-starting-project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _extraReducers;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createUserWithEmailAndPassword, GoogleAuthProvider, sendEmailVerification, sendPasswordResetEmail, setPersistence, signInWithEmailAndPassword, signInWithPopup, updateProfile } from \"@firebase/auth\";\nimport { addDoc, doc, getDoc, setDoc } from \"@firebase/firestore\";\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { auth, db } from \"../firebase/firebase\";\nimport { HYDRATE } from \"next-redux-wrapper\";\nexport var handleSignUp = createAsyncThunk(\"handleSignUp/auth\", /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(user) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return createUserWithEmailAndPassword(auth, user.email, user.password);\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return updateProfile(auth.currentUser, {\n              displayName: user.username\n            });\n\n          case 5:\n            _context.next = 7;\n            return setDoc(doc(db, \"users\", response.user.uid), {\n              username: auth.currentUser.displayName,\n              createdAt: new Date(),\n              email: user.email\n            });\n\n          case 7:\n            return _context.abrupt(\"return\", user.username);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}());\nexport var handleSignIn = createAsyncThunk(\"handleSignIn/auth\", /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref2) {\n    var user, checked, response;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            user = _ref2.user, checked = _ref2.checked;\n            _context2.next = 3;\n            return signInWithEmailAndPassword(auth, user.email, user.password);\n\n          case 3:\n            response = _context2.sent;\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x2) {\n    return _ref3.apply(this, arguments);\n  };\n}());\nexport var handleForgetPass = createAsyncThunk(\"handleForgetPass/auth\", /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(email) {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return sendPasswordResetEmail(auth, email);\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x3) {\n    return _ref4.apply(this, arguments);\n  };\n}());\nexport var getCurrent = createAsyncThunk(\"getCurrent/auth\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n  var user;\n  return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return getDoc(doc(db, \"users\", auth.currentUser.uid));\n\n        case 2:\n          user = _context4.sent;\n          console.log(user.data()); // const sentV = await sendEmailVerification(response.user);\n\n        case 4:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _callee4);\n})));\nexport var googleSignin = createAsyncThunk(\"googleSignin/auth\", /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(user) {\n    var googleProvider, response, docSnap;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            googleProvider = new GoogleAuthProvider(); // const presist = await setPersistence(auth, localStorage);\n\n            _context5.next = 3;\n            return signInWithPopup(auth, googleProvider);\n\n          case 3:\n            response = _context5.sent;\n            _context5.next = 6;\n            return getDoc(doc(db, \"users\", response.user.uid));\n\n          case 6:\n            docSnap = _context5.sent;\n            console.log(\"This is docsnap\", docSnap);\n\n            if (docSnap) {\n              _context5.next = 11;\n              break;\n            }\n\n            _context5.next = 11;\n            return setDoc(doc(db, \"users\", response.user.uid), {\n              username: response.user.displayName,\n              createdAt: new Date(),\n              email: response.user.email\n            });\n\n          case 11:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function (_x4) {\n    return _ref6.apply(this, arguments);\n  };\n}());\nvar authSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    isLoggedIn: false,\n    response: \"\",\n    currentUser: \"\",\n    google: {\n      status: \"\"\n    },\n    forgotPass: {\n      status: \"\"\n    },\n    error: \"\"\n  },\n  reducers: {\n    loginHandler: function loginHandler(state, action) {\n      state.isLoggedIn = action.payload;\n    },\n    setCurrentUser: function setCurrentUser(state, action) {\n      state.currentUser = action.payload;\n    }\n  },\n  extraReducers: (_extraReducers = {}, _defineProperty(_extraReducers, HYDRATE, function (state, action) {\n    return _objectSpread(_objectSpread({}, state), action.payload.some);\n  }), _defineProperty(_extraReducers, handleSignUp.pending, function (state, action) {\n    state.response = \"loading\";\n  }), _defineProperty(_extraReducers, handleSignUp.fulfilled, function (state, action) {\n    state.response = \"success\";\n  }), _defineProperty(_extraReducers, handleSignUp.rejected, function (state, action) {\n    state.response = action.error.message;\n  }), _defineProperty(_extraReducers, handleSignIn.pending, function (state, action) {\n    state.response = \"loading\";\n  }), _defineProperty(_extraReducers, handleSignIn.fulfilled, function (state, action) {\n    state.response = \"success\";\n    state.error = \"\";\n  }), _defineProperty(_extraReducers, handleSignIn.rejected, function (state, action) {\n    console.log(action.error.message);\n    var error;\n\n    if (action.error.message === \"Firebase: Error (auth/user-not-found).\") {\n      error = \"There is no such a user, make sure to use the correct email.\";\n    } else if (action.error.message === \"Firebase: Access to this account has been temporarily disabled due to many failed login attempts. You can immediately restore it by resetting your password or you can try again later. (auth/too-many-requests).\") {\n      error = \"Too many attempts, try again later.\";\n    } else if (action.error.message === \"Firebase: Error (auth/wrong-password).\") {\n      error = \"Wrong password, try again.\";\n    }\n\n    console.log(\"errrrr\", error);\n    state.response = \"error\";\n    state.error = error;\n  }), _defineProperty(_extraReducers, googleSignin.pending, function (state, action) {\n    state.google.status = \"loading\";\n  }), _defineProperty(_extraReducers, googleSignin.fulfilled, function (state, action) {\n    state.google.status = \"success\";\n  }), _defineProperty(_extraReducers, googleSignin.rejected, function (state, action) {\n    state.google.status = action.error.message;\n  }), _defineProperty(_extraReducers, handleForgetPass.pending, function (state, action) {\n    state.forgotPass.status = \"loading\";\n  }), _defineProperty(_extraReducers, handleForgetPass.fulfilled, function (state, action) {\n    state.forgotPass.status = \"success\";\n  }), _defineProperty(_extraReducers, handleForgetPass.rejected, function (state, action) {\n    state.forgotPass.status = action.error.message;\n  }), _extraReducers)\n});\nvar _authSlice$actions = authSlice.actions,\n    loginHandler = _authSlice$actions.loginHandler,\n    setCurrentUser = _authSlice$actions.setCurrentUser;\nexport { loginHandler, setCurrentUser };\nexport default authSlice.reducer;","map":{"version":3,"sources":["D:/Udemy/nextjs/06-onwards-to-a-bigger-project-starting-project/store/authSlice.js"],"names":["createUserWithEmailAndPassword","GoogleAuthProvider","sendEmailVerification","sendPasswordResetEmail","setPersistence","signInWithEmailAndPassword","signInWithPopup","updateProfile","addDoc","doc","getDoc","setDoc","createAsyncThunk","createSlice","axios","auth","db","HYDRATE","handleSignUp","user","email","password","response","currentUser","displayName","username","uid","createdAt","Date","handleSignIn","checked","handleForgetPass","getCurrent","console","log","data","googleSignin","googleProvider","docSnap","authSlice","name","initialState","isLoggedIn","google","status","forgotPass","error","reducers","loginHandler","state","action","payload","setCurrentUser","extraReducers","some","pending","fulfilled","rejected","message","actions","reducer"],"mappings":"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","sourcesContent":["import {\r\n  createUserWithEmailAndPassword,\r\n  GoogleAuthProvider,\r\n  sendEmailVerification,\r\n  sendPasswordResetEmail,\r\n  setPersistence,\r\n  signInWithEmailAndPassword,\r\n  signInWithPopup,\r\n  updateProfile,\r\n} from \"@firebase/auth\";\r\nimport { addDoc, doc, getDoc, setDoc } from \"@firebase/firestore\";\r\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport { auth, db } from \"../firebase/firebase\";\r\nimport { HYDRATE } from \"next-redux-wrapper\";\r\n\r\nexport const handleSignUp = createAsyncThunk(\r\n  \"handleSignUp/auth\",\r\n  async (user) => {\r\n    const response = await createUserWithEmailAndPassword(\r\n      auth,\r\n      user.email,\r\n      user.password\r\n    );\r\n\r\n    await updateProfile(auth.currentUser, {\r\n      displayName: user.username,\r\n    });\r\n    await setDoc(doc(db, \"users\", response.user.uid), {\r\n      username: auth.currentUser.displayName,\r\n      createdAt: new Date(),\r\n      email: user.email,\r\n    });\r\n    return user.username;\r\n  }\r\n);\r\nexport const handleSignIn = createAsyncThunk(\r\n  \"handleSignIn/auth\",\r\n  async ({ user, checked }) => {\r\n    //   const persistance = await setPersistence(auth,checked? localStorage:sessionStorage)\r\n    const response = await signInWithEmailAndPassword(\r\n      auth,\r\n      user.email,\r\n      user.password\r\n    );\r\n    // const sentV = await sendEmailVerification(response.user);\r\n  }\r\n);\r\nexport const handleForgetPass = createAsyncThunk(\r\n  \"handleForgetPass/auth\",\r\n  async (email) => {\r\n    await sendPasswordResetEmail(auth, email);\r\n  }\r\n);\r\nexport const getCurrent = createAsyncThunk(\"getCurrent/auth\", async () => {\r\n  const user = await getDoc(doc(db, \"users\", auth.currentUser.uid));\r\n  console.log(user.data());\r\n  // const sentV = await sendEmailVerification(response.user);\r\n});\r\n\r\nexport const googleSignin = createAsyncThunk(\r\n  \"googleSignin/auth\",\r\n  async (user) => {\r\n    const googleProvider = new GoogleAuthProvider();\r\n    // const presist = await setPersistence(auth, localStorage);\r\n    const response = await signInWithPopup(auth, googleProvider);\r\n    const docSnap = await getDoc(doc(db, \"users\", response.user.uid));\r\n    console.log(\"This is docsnap\", docSnap);\r\n    if (!docSnap) {\r\n      await setDoc(doc(db, \"users\", response.user.uid), {\r\n        username: response.user.displayName,\r\n        createdAt: new Date(),\r\n        email: response.user.email,\r\n      });\r\n    }\r\n  }\r\n);\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState: {\r\n    isLoggedIn: false,\r\n    response: \"\",\r\n    currentUser: \"\",\r\n    google: { status: \"\" },\r\n    forgotPass: { status: \"\" },\r\n    error: \"\",\r\n  },\r\n  reducers: {\r\n    loginHandler(state, action) {\r\n      state.isLoggedIn = action.payload;\r\n    },\r\n    setCurrentUser(state, action) {\r\n      state.currentUser = action.payload;\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [HYDRATE]: (state, action) => {\r\n      return {\r\n        ...state,\r\n        ...action.payload.some,\r\n      };\r\n    },\r\n    [handleSignUp.pending]: (state, action) => {\r\n      state.response = \"loading\";\r\n    },\r\n    [handleSignUp.fulfilled]: (state, action) => {\r\n      state.response = \"success\";\r\n    },\r\n\r\n    [handleSignUp.rejected]: (state, action) => {\r\n      state.response = action.error.message;\r\n    },\r\n    [handleSignIn.pending]: (state, action) => {\r\n      state.response = \"loading\";\r\n    },\r\n    [handleSignIn.fulfilled]: (state, action) => {\r\n      state.response = \"success\";\r\n      state.error = \"\";\r\n    },\r\n\r\n    [handleSignIn.rejected]: (state, action) => {\r\n      console.log(action.error.message);\r\n      let error;\r\n      if (action.error.message === \"Firebase: Error (auth/user-not-found).\") {\r\n        error = \"There is no such a user, make sure to use the correct email.\";\r\n      } else if (\r\n        action.error.message ===\r\n        \"Firebase: Access to this account has been temporarily disabled due to many failed login attempts. You can immediately restore it by resetting your password or you can try again later. (auth/too-many-requests).\"\r\n      ) {\r\n        error = \"Too many attempts, try again later.\";\r\n      } else if (\r\n        action.error.message === \"Firebase: Error (auth/wrong-password).\"\r\n      ) {\r\n        error = \"Wrong password, try again.\";\r\n      }\r\n      console.log(\"errrrr\", error);\r\n\r\n      state.response = \"error\";\r\n      state.error = error;\r\n    },\r\n    [googleSignin.pending]: (state, action) => {\r\n      state.google.status = \"loading\";\r\n    },\r\n    [googleSignin.fulfilled]: (state, action) => {\r\n      state.google.status = \"success\";\r\n    },\r\n\r\n    [googleSignin.rejected]: (state, action) => {\r\n      state.google.status = action.error.message;\r\n    },\r\n    [handleForgetPass.pending]: (state, action) => {\r\n      state.forgotPass.status = \"loading\";\r\n    },\r\n    [handleForgetPass.fulfilled]: (state, action) => {\r\n      state.forgotPass.status = \"success\";\r\n    },\r\n\r\n    [handleForgetPass.rejected]: (state, action) => {\r\n      state.forgotPass.status = action.error.message;\r\n    },\r\n  },\r\n});\r\nexport const { loginHandler, setCurrentUser } = authSlice.actions;\r\nexport default authSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"D:/Udemy/nextjs/06-onwards-to-a-bigger-project-starting-project/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { HYDRATE } from \"next-redux-wrapper\";\nvar usersSLice = createSlice({\n  name: \"some\",\n  initialState: {\n    users: []\n  },\n  reducers: {\n    addUser: function addUser(state, action) {\n      state.users = action.payload;\n    }\n  },\n  extraReducers: _defineProperty({}, HYDRATE, function (state, action) {\n    console.log(\"Hydrate\", state, action.payload);\n    return _objectSpread(_objectSpread({}, state), action.payload.some);\n  })\n});\nvar addUser = usersSLice.actions.addUser;\nexport { addUser };\nexport default usersSLice.reducer;","map":{"version":3,"sources":["D:/Udemy/nextjs/06-onwards-to-a-bigger-project-starting-project/store/slice.js"],"names":["createSlice","HYDRATE","usersSLice","name","initialState","users","reducers","addUser","state","action","payload","extraReducers","console","log","some","actions","reducer"],"mappings":";;;;;;AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,OAAT,QAAwB,oBAAxB;AAEA,IAAMC,UAAU,GAAGF,WAAW,CAAC;AAC7BG,EAAAA,IAAI,EAAE,MADuB;AAE7BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAE;AADK,GAFe;AAK7BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OADQ,mBACAC,KADA,EACOC,MADP,EACe;AACrBD,MAAAA,KAAK,CAACH,KAAN,GAAcI,MAAM,CAACC,OAArB;AACD;AAHO,GALmB;AAU7BC,EAAAA,aAAa,sBACVV,OADU,EACA,UAACO,KAAD,EAAQC,MAAR,EAAmB;AAC5BG,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBL,KAAvB,EAA8BC,MAAM,CAACC,OAArC;AACA,2CACKF,KADL,GAEKC,MAAM,CAACC,OAAP,CAAeI,IAFpB;AAID,GAPU;AAVgB,CAAD,CAA9B;IAoBeP,O,GAAYL,UAAU,CAACa,O,CAAvBR,O;;AACf,eAAeL,UAAU,CAACc,OAA1B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { HYDRATE } from \"next-redux-wrapper\";\r\n\r\nconst usersSLice = createSlice({\r\n  name: \"some\",\r\n  initialState: {\r\n    users: [],\r\n  },\r\n  reducers: {\r\n    addUser(state, action) {\r\n      state.users = action.payload;\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [HYDRATE]: (state, action) => {\r\n      console.log(\"Hydrate\", state, action.payload);\r\n      return {\r\n        ...state,\r\n        ...action.payload.some,\r\n      };\r\n    },\r\n  },\r\n});\r\nexport const { addUser } = usersSLice.actions;\r\nexport default usersSLice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { arrayRemove, arrayUnion, collection, doc, getDoc, getDocs, query, updateDoc, where } from \"@firebase/firestore\";\nimport { db } from \"../../../firebase/firebase\";\nimport { v4 as uuid } from \"uuid\";\nexport default async function handler(req, res) {\n  const {\n    postId\n  } = req.query;\n  const post = postId[0]; //   res.status(200).json(\"hey there\");\n\n  if (req.method === \"POST\") {\n    const reply = req.body;\n    const replyData = {\n      content: reply.content,\n      user: reply.user,\n      id: uuid(),\n      postId: reply.postId\n    };\n\n    try {\n      await updateDoc(doc(db, \"posts\", post), {\n        replies: arrayUnion(replyData)\n      });\n      res.status(200).json(\"success\");\n    } catch (err) {\n      console.log(\"err\", err);\n      res.status(400).end();\n    }\n  }\n\n  if (req.method === \"DELETE\") {\n    const {\n      postId\n    } = req.query;\n    const replyId = postId[0];\n    const post = postId[1]; // const replyUser = query.postId[2];\n    // const reply = {\n    //   content:replyContent,\n    //   user:replyUser,\n    // }\n\n    try {\n      const postDoc = (await getDoc(doc(db, \"posts\", post))).data();\n      const reply = postDoc.replies.find(rep => rep.id === replyId);\n      await updateDoc(doc(db, \"posts\", post), {\n        replies: arrayRemove(reply)\n      });\n    } catch (err) {\n      res.status(402).end();\n    }\n  }\n\n  if (req.method === \"PUT\") {\n    const reply = req.body;\n    const {\n      postId\n    } = req.query;\n    const replyId = postId[0];\n    const post = postId[1];\n\n    try {\n      const postDoc = (await getDoc(doc(db, \"posts\", post))).data().replies;\n      res.status(200).json(postDoc);\n    } catch (err) {\n      res.status(404).end();\n    }\n  }\n}","map":{"version":3,"sources":["D:/Udemy/nextjs/06-onwards-to-a-bigger-project-starting-project/pages/api/replies/[...postId].js"],"names":["arrayRemove","arrayUnion","collection","doc","getDoc","getDocs","query","updateDoc","where","db","v4","uuid","handler","req","res","postId","post","method","reply","body","replyData","content","user","id","replies","status","json","err","console","log","end","replyId","postDoc","data","find","rep"],"mappings":"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","sourcesContent":["import {\r\n  arrayRemove,\r\n  arrayUnion,\r\n  collection,\r\n  doc,\r\n  getDoc,\r\n  getDocs,\r\n  query,\r\n  updateDoc,\r\n  where,\r\n} from \"@firebase/firestore\";\r\nimport { db } from \"../../../firebase/firebase\";\r\nimport { v4 as uuid } from \"uuid\";\r\nexport default async function handler(req, res) {\r\n  const { postId } = req.query;\r\n  const post = postId[0];\r\n  //   res.status(200).json(\"hey there\");\r\n  if (req.method === \"POST\") {\r\n    const reply = req.body;\r\n\r\n    const replyData = {\r\n      content: reply.content,\r\n      user: reply.user,\r\n      id: uuid(),\r\n      postId: reply.postId,\r\n    };\r\n    try {\r\n      await updateDoc(doc(db, \"posts\", post), {\r\n        replies: arrayUnion(replyData),\r\n      });\r\n      res.status(200).json(\"success\");\r\n    } catch (err) {\r\n      console.log(\"err\", err);\r\n      res.status(400).end();\r\n    }\r\n  }\r\n  if (req.method === \"DELETE\") {\r\n    const { postId } = req.query;\r\n    const replyId = postId[0];\r\n    const post = postId[1];\r\n    // const replyUser = query.postId[2];\r\n    // const reply = {\r\n    //   content:replyContent,\r\n    //   user:replyUser,\r\n\r\n    // }\r\n\r\n    try {\r\n      const postDoc = (await getDoc(doc(db, \"posts\", post))).data();\r\n      const reply = postDoc.replies.find((rep) => rep.id === replyId);\r\n      await updateDoc(doc(db, \"posts\", post), {\r\n        replies: arrayRemove(reply),\r\n      });\r\n    } catch (err) {\r\n      res.status(402).end();\r\n    }\r\n  }\r\n  if (req.method === \"PUT\") {\r\n    const reply = req.body;\r\n    const { postId } = req.query;\r\n    const replyId = postId[0];\r\n    const post = postId[1];\r\n\r\n    try {\r\n      const postDoc = (await getDoc(doc(db, \"posts\", post))).data().replies;\r\n      res.status(200).json(postDoc);\r\n    } catch (err) {\r\n      res.status(404).end();\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
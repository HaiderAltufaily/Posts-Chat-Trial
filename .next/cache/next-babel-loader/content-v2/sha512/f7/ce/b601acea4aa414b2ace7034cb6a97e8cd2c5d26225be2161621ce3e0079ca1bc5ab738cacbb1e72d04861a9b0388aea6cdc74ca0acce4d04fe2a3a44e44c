{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { HYDRATE } from \"next-redux-wrapper\";\nexport const submitPost = createAsyncThunk(\"submitPost/posts\", async postData => {\n  axios.post(\"/api/new-post\", postData);\n});\nexport const deletePost = createAsyncThunk(\"deletePost/posts\", async post => {\n  axios.delete(`/api/posts/${post}`);\n});\nconst postsSlice = createSlice({\n  name: \"posts\",\n  initialState: {\n    postStatus: \"\",\n    deletePostStatus: \"\"\n  },\n  extraReducers: {\n    [HYDRATE]: (state, action) => {\n      return _objectSpread(_objectSpread({}, state), action.payload.some);\n    },\n    [submitPost.pending]: (state, action) => {\n      state.postStatus = \"loading\";\n    },\n    [submitPost.fulfilled]: (state, action) => {\n      state.postStatus = \"success\";\n    },\n    [submitPost.rejected]: (state, action) => {\n      state.postStatus = action.error.message;\n    },\n    [deletePost.pending]: (state, action) => {\n      console.log(action);\n      state.deletePostStatus = \"loading\";\n    },\n    [deletePost.fulfilled]: (state, action) => {\n      console.log(action);\n      state.deletePostStatus = \"success\";\n    },\n    [deletePost.rejected]: (state, action) => {\n      state.deletePostStatus = action.error.message;\n    }\n  }\n});\nexport default postsSlice.reducer;","map":{"version":3,"sources":["D:/Udemy/nextjs/06-onwards-to-a-bigger-project-starting-project/store/postsSlice.js"],"names":["createAsyncThunk","createSlice","axios","HYDRATE","submitPost","postData","post","deletePost","delete","postsSlice","name","initialState","postStatus","deletePostStatus","extraReducers","state","action","payload","some","pending","fulfilled","rejected","error","message","console","log","reducer"],"mappings":";;;;;;AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,OAAO,MAAMC,UAAU,GAAGJ,gBAAgB,CACxC,kBADwC,EAExC,MAAOK,QAAP,IAAoB;AAClBH,EAAAA,KAAK,CAACI,IAAN,CAAW,eAAX,EAA4BD,QAA5B;AACD,CAJuC,CAAnC;AAMP,OAAO,MAAME,UAAU,GAAGP,gBAAgB,CAAC,kBAAD,EAAqB,MAAOM,IAAP,IAAgB;AAC7EJ,EAAAA,KAAK,CAACM,MAAN,CAAc,cAAaF,IAAK,EAAhC;AACD,CAFyC,CAAnC;AAGP,MAAMG,UAAU,GAAGR,WAAW,CAAC;AAC7BS,EAAAA,IAAI,EAAE,OADuB;AAE7BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,UAAU,EAAE,EADA;AAEZC,IAAAA,gBAAgB,EAAE;AAFN,GAFe;AAM7BC,EAAAA,aAAa,EAAE;AACb,KAACX,OAAD,GAAW,CAACY,KAAD,EAAQC,MAAR,KAAmB;AAC5B,6CACKD,KADL,GAEKC,MAAM,CAACC,OAAP,CAAeC,IAFpB;AAID,KANY;AAQb,KAACd,UAAU,CAACe,OAAZ,GAAsB,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AACvCD,MAAAA,KAAK,CAACH,UAAN,GAAmB,SAAnB;AACD,KAVY;AAWb,KAACR,UAAU,CAACgB,SAAZ,GAAwB,CAACL,KAAD,EAAQC,MAAR,KAAmB;AACzCD,MAAAA,KAAK,CAACH,UAAN,GAAmB,SAAnB;AACD,KAbY;AAeb,KAACR,UAAU,CAACiB,QAAZ,GAAuB,CAACN,KAAD,EAAQC,MAAR,KAAmB;AACxCD,MAAAA,KAAK,CAACH,UAAN,GAAmBI,MAAM,CAACM,KAAP,CAAaC,OAAhC;AACD,KAjBY;AAmBb,KAAChB,UAAU,CAACY,OAAZ,GAAsB,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AACvCQ,MAAAA,OAAO,CAACC,GAAR,CAAYT,MAAZ;AACAD,MAAAA,KAAK,CAACF,gBAAN,GAAyB,SAAzB;AACD,KAtBY;AAuBb,KAACN,UAAU,CAACa,SAAZ,GAAwB,CAACL,KAAD,EAAQC,MAAR,KAAmB;AACzCQ,MAAAA,OAAO,CAACC,GAAR,CAAYT,MAAZ;AACAD,MAAAA,KAAK,CAACF,gBAAN,GAAyB,SAAzB;AACD,KA1BY;AA4Bb,KAACN,UAAU,CAACc,QAAZ,GAAuB,CAACN,KAAD,EAAQC,MAAR,KAAmB;AACxCD,MAAAA,KAAK,CAACF,gBAAN,GAAyBG,MAAM,CAACM,KAAP,CAAaC,OAAtC;AACD;AA9BY;AANc,CAAD,CAA9B;AAuCA,eAAed,UAAU,CAACiB,OAA1B","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport { HYDRATE } from \"next-redux-wrapper\";\r\nexport const submitPost = createAsyncThunk(\r\n  \"submitPost/posts\",\r\n  async (postData) => {\r\n    axios.post(\"/api/new-post\", postData);\r\n  }\r\n);\r\nexport const deletePost = createAsyncThunk(\"deletePost/posts\", async (post) => {\r\n  axios.delete(`/api/posts/${post}`);\r\n});\r\nconst postsSlice = createSlice({\r\n  name: \"posts\",\r\n  initialState: {\r\n    postStatus: \"\",\r\n    deletePostStatus: \"\",\r\n  },\r\n  extraReducers: {\r\n    [HYDRATE]: (state, action) => {\r\n      return {\r\n        ...state,\r\n        ...action.payload.some,\r\n      };\r\n    },\r\n\r\n    [submitPost.pending]: (state, action) => {\r\n      state.postStatus = \"loading\";\r\n    },\r\n    [submitPost.fulfilled]: (state, action) => {\r\n      state.postStatus = \"success\";\r\n    },\r\n\r\n    [submitPost.rejected]: (state, action) => {\r\n      state.postStatus = action.error.message;\r\n    },\r\n\r\n    [deletePost.pending]: (state, action) => {\r\n      console.log(action);\r\n      state.deletePostStatus = \"loading\";\r\n    },\r\n    [deletePost.fulfilled]: (state, action) => {\r\n      console.log(action);\r\n      state.deletePostStatus = \"success\";\r\n    },\r\n\r\n    [deletePost.rejected]: (state, action) => {\r\n      state.deletePostStatus = action.error.message;\r\n    },\r\n  },\r\n});\r\nexport default postsSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}
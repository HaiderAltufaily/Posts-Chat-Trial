{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Udemy\\\\nextjs\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\new-meetup\\\\index.js\";\nimport React, { useEffect } from \"react\";\nimport NewMeetUpForm from \"../../components/meetups/NewMeetupForm\";\nimport { useRouter } from \"next/router\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addUser } from \"../../store/slice\";\nimport { wrapper } from \"../../store/store\";\nimport { addDoc, collection } from \"@firebase/firestore\";\nimport db from \"../../firebase/firebase\";\nimport { async } from \"@firebase/util\";\n\nfunction NewMeetPage(props) {\n  const router = useRouter();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(addUser(\"hello\"));\n  }, []);\n  const users = useSelector(state => state.users.users);\n\n  async function addMeetHandler(formData) {\n    /******First Method******/\n    const response = await fetch(\"/api/new-meetup\", {\n      method: \"POST\",\n      body: JSON.stringify(formData),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await response.json();\n    router.replace(\"/\");\n    /******Second Method******/\n\n    await addDoc(collection(db, \"meetups\"), formData);\n    router.replace(\"/\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" \", users, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n} // export const getServerSideProps = wrapper.getServerSideProps(\n//   (store) => async () => {\n//     await store.dispatch(addUser(\"noone\"));\n//     const x = store.getState().users;\n//     console.log(x);\n//     return {\n//       props: x,\n//     };\n//   }\n// );\n\n\nexport default NewMeetPage;","map":{"version":3,"sources":["D:/Udemy/nextjs/06-onwards-to-a-bigger-project-starting-project/pages/new-meetup/index.js"],"names":["React","useEffect","NewMeetUpForm","useRouter","useDispatch","useSelector","addUser","wrapper","addDoc","collection","db","async","NewMeetPage","props","router","dispatch","users","state","addMeetHandler","formData","response","fetch","method","body","JSON","stringify","headers","data","json","replace"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,wCAA1B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,qBAAnC;AACA,OAAOC,EAAP,MAAe,yBAAf;AACA,SAASC,KAAT,QAAsB,gBAAtB;;AACA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,QAAMC,MAAM,GAAGX,SAAS,EAAxB;AACA,QAAMY,QAAQ,GAAGX,WAAW,EAA5B;AACAH,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,QAAQ,CAACT,OAAO,CAAC,OAAD,CAAR,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;AAGA,QAAMU,KAAK,GAAGX,WAAW,CAAEY,KAAD,IAAWA,KAAK,CAACD,KAAN,CAAYA,KAAxB,CAAzB;;AAEA,iBAAeE,cAAf,CAA8BC,QAA9B,EAAwC;AACtC;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iBAAD,EAAoB;AAC9CC,MAAAA,MAAM,EAAE,MADsC;AAE9CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,QAAf,CAFwC;AAG9CO,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAHqC,KAApB,CAA5B;AAOA,UAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAnB;AACAd,IAAAA,MAAM,CAACe,OAAP,CAAe,GAAf;AACA;;AACA,UAAMrB,MAAM,CAACC,UAAU,CAACC,EAAD,EAAK,SAAL,CAAX,EAA4BS,QAA5B,CAAZ;AACAL,IAAAA,MAAM,CAACe,OAAP,CAAe,GAAf;AACD;;AACD,sBACE;AAAA,eACG,GADH,eAEE;AAAA,sBAAMb,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,C,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeJ,WAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport NewMeetUpForm from \"../../components/meetups/NewMeetupForm\";\r\nimport { useRouter } from \"next/router\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addUser } from \"../../store/slice\";\r\nimport { wrapper } from \"../../store/store\";\r\nimport { addDoc, collection } from \"@firebase/firestore\";\r\nimport db from \"../../firebase/firebase\";\r\nimport { async } from \"@firebase/util\";\r\nfunction NewMeetPage(props) {\r\n  const router = useRouter();\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(addUser(\"hello\"));\r\n  }, []);\r\n  const users = useSelector((state) => state.users.users);\r\n\r\n  async function addMeetHandler(formData) {\r\n    /******First Method******/\r\n    const response = await fetch(\"/api/new-meetup\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(formData),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    const data = await response.json();\r\n    router.replace(\"/\");\r\n    /******Second Method******/\r\n    await addDoc(collection(db, \"meetups\"), formData);\r\n    router.replace(\"/\");\r\n  }\r\n  return (\r\n    <div>\r\n      {\" \"}\r\n      <h1> {users} </h1>\r\n    </div>\r\n  );\r\n}\r\n// export const getServerSideProps = wrapper.getServerSideProps(\r\n//   (store) => async () => {\r\n//     await store.dispatch(addUser(\"noone\"));\r\n//     const x = store.getState().users;\r\n//     console.log(x);\r\n//     return {\r\n//       props: x,\r\n//     };\r\n//   }\r\n// );\r\n\r\nexport default NewMeetPage;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { addDoc, collection, doc, getDoc, getDocs, setDoc } from \"@firebase/firestore\";\nimport { db } from \"../../firebase/firebase\";\n\nasync function handler(req, res) {\n  if (req.method === \"POST\") {\n    try {\n      const data = req.body;\n      await addDoc(collection(db, \"posts\"), _objectSpread(_objectSpread({}, data), {}, {\n        time: new Date()\n      }));\n      res.status(200).json(\"added\");\n    } catch (err) {\n      res.status(404).end();\n    }\n  } // if (req.method === \"GET\") {\n  //   try {\n  //     const data = await getDocs(collection(db, \"posts\")).then((posts) =>\n  //       posts.docs.map((doc) => doc.data())\n  //     );\n  //     res.status(200).json(data);\n  //   } catch (err) {\n  //     res.status(400).end();\n  //   }\n  // }\n\n}\n\nexport default handler;","map":{"version":3,"sources":["D:/Udemy/nextjs/06-onwards-to-a-bigger-project-starting-project/pages/api/new-post.js"],"names":["addDoc","collection","doc","getDoc","getDocs","setDoc","db","handler","req","res","method","data","body","time","Date","status","json","err","end"],"mappings":";;;;;;AAAA,SACEA,MADF,EAEEC,UAFF,EAGEC,GAHF,EAIEC,MAJF,EAKEC,OALF,EAMEC,MANF,QAOO,qBAPP;AAQA,SAASC,EAAT,QAAmB,yBAAnB;;AAEA,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAC/B,MAAID,GAAG,CAACE,MAAJ,KAAe,MAAnB,EAA2B;AACzB,QAAI;AACF,YAAMC,IAAI,GAAGH,GAAG,CAACI,IAAjB;AACA,YAAMZ,MAAM,CAACC,UAAU,CAACK,EAAD,EAAK,OAAL,CAAX,kCAA+BK,IAA/B;AAAqCE,QAAAA,IAAI,EAAE,IAAIC,IAAJ;AAA3C,SAAZ;AACAL,MAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,OAArB;AACD,KAJD,CAIE,OAAOC,GAAP,EAAY;AACZR,MAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBG,GAAhB;AACD;AACF,GAT8B,CAU/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD;;AACD,eAAeX,OAAf","sourcesContent":["import {\r\n  addDoc,\r\n  collection,\r\n  doc,\r\n  getDoc,\r\n  getDocs,\r\n  setDoc,\r\n} from \"@firebase/firestore\";\r\nimport { db } from \"../../firebase/firebase\";\r\n\r\nasync function handler(req, res) {\r\n  if (req.method === \"POST\") {\r\n    try {\r\n      const data = req.body;\r\n      await addDoc(collection(db, \"posts\"), { ...data, time: new Date() });\r\n      res.status(200).json(\"added\");\r\n    } catch (err) {\r\n      res.status(404).end();\r\n    }\r\n  }\r\n  // if (req.method === \"GET\") {\r\n  //   try {\r\n  //     const data = await getDocs(collection(db, \"posts\")).then((posts) =>\r\n  //       posts.docs.map((doc) => doc.data())\r\n  //     );\r\n  //     res.status(200).json(data);\r\n  //   } catch (err) {\r\n  //     res.status(400).end();\r\n  //   }\r\n  // }\r\n}\r\nexport default handler;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Udemy\\\\nextjs\\\\06-onwards-to-a-bigger-project-starting-project\\\\components\\\\authForm\\\\SignIn.jsx\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { auth } from \"../../firebase/firebase\";\nimport { googleSignin, handleSignIn, handleSignUp } from \"../../store/authSlice\";\nimport { addUser } from \"../../store/slice\";\nimport Card from \"../ui/Card\";\nimport classes from \"./SignUp.module.css\";\n\nfunction SignIn() {\n  const emailRef = useRef();\n  const {\n    0: show,\n    1: setShow\n  } = useState(false);\n  const passwordRef = useRef();\n  const dispatch = useDispatch();\n  const stato = useSelector(state => state.auth);\n  const forgotRef = useRef();\n\n  function submitHandler(e) {\n    e.preventDefault();\n    const user = {\n      email: emailRef.current.value,\n      password: passwordRef.current.value\n    };\n    dispatch(handleSignIn(user));\n  }\n\n  function handleResetPassword() {}\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          required: true,\n          id: \"email\",\n          ref: emailRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          required: true,\n          id: \"password\",\n          ref: passwordRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: !stato.isLoggedIn && /*#__PURE__*/_jsxDEV(\"button\", {\n          children: stato.response === \"loading\" ? \"loading...\" : \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch(googleSignin()),\n      children: \"Sign in with google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      onClick: () => setShow(true),\n      style: {\n        color: \"red\",\n        fontWeight: \"light\",\n        textAlign: \"center\",\n        cursor: \"pointer\"\n      },\n      children: \"Forgot Password?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), show && /*#__PURE__*/_jsxDEV(\"form\", {\n      style: {\n        textAlign: \"center\"\n      },\n      className: classes.form,\n      onSubmit: handleResetPassword,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          required: true,\n          id: \"email\",\n          ref: forgotRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [\"(\", /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Send Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\nexport default SignIn;","map":{"version":3,"sources":["D:/Udemy/nextjs/06-onwards-to-a-bigger-project-starting-project/components/authForm/SignIn.jsx"],"names":["React","useEffect","useRef","useState","useSelector","useDispatch","auth","googleSignin","handleSignIn","handleSignUp","addUser","Card","classes","SignIn","emailRef","show","setShow","passwordRef","dispatch","stato","state","forgotRef","submitHandler","e","preventDefault","user","email","current","value","password","handleResetPassword","form","control","actions","isLoggedIn","response","color","fontWeight","textAlign","cursor"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { auth } from \"../../firebase/firebase\";\r\nimport {\r\n  googleSignin,\r\n  handleSignIn,\r\n  handleSignUp,\r\n} from \"../../store/authSlice\";\r\nimport { addUser } from \"../../store/slice\";\r\nimport Card from \"../ui/Card\";\r\nimport classes from \"./SignUp.module.css\";\r\n\r\nfunction SignIn() {\r\n  const emailRef = useRef();\r\n  const [show, setShow] = useState(false);\r\n  const passwordRef = useRef();\r\n  const dispatch = useDispatch();\r\n  const stato = useSelector((state) => state.auth);\r\n  const forgotRef = useRef();\r\n  function submitHandler(e) {\r\n    e.preventDefault();\r\n    const user = {\r\n      email: emailRef.current.value,\r\n\r\n      password: passwordRef.current.value,\r\n    };\r\n\r\n    dispatch(handleSignIn(user));\r\n  }\r\n  function handleResetPassword() {}\r\n  return (\r\n    <Card>\r\n      <form className={classes.form} onSubmit={submitHandler}>\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input type=\"email\" required id=\"email\" ref={emailRef} />\r\n        </div>\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input type=\"password\" required id=\"password\" ref={passwordRef} />\r\n        </div>\r\n\r\n        <div className={classes.actions}>\r\n          {!stato.isLoggedIn && (\r\n            <button>\r\n              {stato.response === \"loading\" ? \"loading...\" : \"Sign In\"}\r\n            </button>\r\n          )}\r\n        </div>\r\n      </form>\r\n      <button onClick={() => dispatch(googleSignin())}>\r\n        Sign in with google\r\n      </button>\r\n      <h4\r\n        onClick={() => setShow(true)}\r\n        style={{\r\n          color: \"red\",\r\n          fontWeight: \"light\",\r\n          textAlign: \"center\",\r\n          cursor: \"pointer\",\r\n        }}\r\n      >\r\n        Forgot Password?\r\n      </h4>\r\n      {show && (\r\n        <form\r\n          style={{ textAlign: \"center\" }}\r\n          className={classes.form}\r\n          onSubmit={handleResetPassword}\r\n        >\r\n          <div className={classes.control}>\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" required id=\"email\" ref={forgotRef} />\r\n          </div>{\" \"}\r\n          <div className={classes.actions}>\r\n            (<button>Send Email</button>\r\n          </div>\r\n        </form>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default SignIn;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { HYDRATE } from \"next-redux-wrapper\";\nexport const addUser = createAsyncThunk(\"some/addUser\", async () => {\n  return \"hello\";\n});\nconst usersSLice = createSlice({\n  name: \"some\",\n  initialState: {\n    users: []\n  },\n  reducers: {},\n  extraReducers: {\n    [HYDRATE]: (state, action) => {\n      return _objectSpread(_objectSpread({}, state), action.payload.some);\n    },\n    [addUser.fulfilled]: (state, action) => {\n      console.log(state.users = []);\n    }\n  }\n});\nexport default usersSLice.reducer;","map":{"version":3,"sources":["D:/Udemy/nextjs/06-onwards-to-a-bigger-project-starting-project/store/slice.js"],"names":["createAsyncThunk","createSlice","HYDRATE","addUser","usersSLice","name","initialState","users","reducers","extraReducers","state","action","payload","some","fulfilled","console","log","reducer"],"mappings":";;;;;;AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,SAASC,OAAT,QAAwB,oBAAxB;AAEA,OAAO,MAAMC,OAAO,GAAGH,gBAAgB,CAAC,cAAD,EAAiB,YAAY;AAClE,SAAO,OAAP;AACD,CAFsC,CAAhC;AAGP,MAAMI,UAAU,GAAGH,WAAW,CAAC;AAC7BI,EAAAA,IAAI,EAAE,MADuB;AAE7BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAE;AADK,GAFe;AAK7BC,EAAAA,QAAQ,EAAE,EALmB;AAM7BC,EAAAA,aAAa,EAAE;AACb,KAACP,OAAD,GAAW,CAACQ,KAAD,EAAQC,MAAR,KAAmB;AAC5B,6CACKD,KADL,GAEKC,MAAM,CAACC,OAAP,CAAeC,IAFpB;AAID,KANY;AAOb,KAACV,OAAO,CAACW,SAAT,GAAqB,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AACtCI,MAAAA,OAAO,CAACC,GAAR,CAAaN,KAAK,CAACH,KAAN,GAAc,EAA3B;AACD;AATY;AANc,CAAD,CAA9B;AAmBA,eAAeH,UAAU,CAACa,OAA1B","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { HYDRATE } from \"next-redux-wrapper\";\r\n\r\nexport const addUser = createAsyncThunk(\"some/addUser\", async () => {\r\n  return \"hello\";\r\n});\r\nconst usersSLice = createSlice({\r\n  name: \"some\",\r\n  initialState: {\r\n    users: [],\r\n  },\r\n  reducers: {},\r\n  extraReducers: {\r\n    [HYDRATE]: (state, action) => {\r\n      return {\r\n        ...state,\r\n        ...action.payload.some,\r\n      };\r\n    },\r\n    [addUser.fulfilled]: (state, action) => {\r\n      console.log((state.users = []));\r\n    },\r\n  },\r\n});\r\n\r\nexport default usersSLice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}
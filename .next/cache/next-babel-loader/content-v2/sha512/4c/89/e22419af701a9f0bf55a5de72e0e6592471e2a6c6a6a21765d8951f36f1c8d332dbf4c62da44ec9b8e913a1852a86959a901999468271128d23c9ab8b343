{"ast":null,"code":"import { setDoc } from \"@firebase/firestore\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\n\nfunction useFetch({\n  method,\n  url,\n  body\n}) {\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(true);\n  const {\n    0: error,\n    1: setError\n  } = useState(null);\n  const {\n    0: data,\n    1: setData\n  } = useState([]);\n  console.log(method, url, body);\n\n  async function getData() {\n    try {\n      const response = await fetch(url);\n\n      if (!response.ok) {\n        throw new Error(\"something went wrong\");\n      }\n\n      const data = await response.json();\n      setData(data);\n      setIsLoading(false);\n    } catch (err) {\n      setError(err.message);\n      setIsLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    getData();\n  }, []);\n  return {\n    isLoading,\n    error,\n    data\n  };\n}\n\nexport default useFetch;","map":{"version":3,"sources":["D:/Udemy/nextjs/06-onwards-to-a-bigger-project-starting-project/hooks/useFetch.js"],"names":["setDoc","axios","useEffect","useState","useFetch","method","url","body","isLoading","setIsLoading","error","setError","data","setData","console","log","getData","response","fetch","ok","Error","json","err","message"],"mappings":"AAAA,SAASA,MAAT,QAAuB,qBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,GAAV;AAAeC,EAAAA;AAAf,CAAlB,EAAyC;AACvC,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BN,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM;AAAA,OAACO,KAAD;AAAA,OAAQC;AAAR,MAAoBR,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM;AAAA,OAACS,IAAD;AAAA,OAAOC;AAAP,MAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACAW,EAAAA,OAAO,CAACC,GAAR,CAAYV,MAAZ,EAAoBC,GAApB,EAAyBC,IAAzB;;AACA,iBAAeS,OAAf,GAAyB;AACvB,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACZ,GAAD,CAA5B;;AACA,UAAI,CAACW,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;AACD;;AACD,YAAMR,IAAI,GAAG,MAAMK,QAAQ,CAACI,IAAT,EAAnB;AACAR,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAH,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KARD,CAQE,OAAOa,GAAP,EAAY;AACZX,MAAAA,QAAQ,CAACW,GAAG,CAACC,OAAL,CAAR;AACAd,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF;;AACDP,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT;AAGA,SAAO;AACLR,IAAAA,SADK;AAELE,IAAAA,KAFK;AAGLE,IAAAA;AAHK,GAAP;AAKD;;AACD,eAAeR,QAAf","sourcesContent":["import { setDoc } from \"@firebase/firestore\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nfunction useFetch({ method, url, body }) {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [data, setData] = useState([]);\r\n  console.log(method, url, body);\r\n  async function getData() {\r\n    try {\r\n      const response = await fetch(url);\r\n      if (!response.ok) {\r\n        throw new Error(\"something went wrong\");\r\n      }\r\n      const data = await response.json();\r\n      setData(data);\r\n      setIsLoading(false);\r\n    } catch (err) {\r\n      setError(err.message);\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n  return {\r\n    isLoading,\r\n    error,\r\n    data,\r\n  };\r\n}\r\nexport default useFetch;\r\n"]},"metadata":{},"sourceType":"module"}